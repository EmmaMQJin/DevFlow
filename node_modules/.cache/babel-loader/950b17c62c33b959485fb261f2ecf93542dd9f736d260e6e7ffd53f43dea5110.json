{"ast":null,"code":"var _jsxFileName = \"/Users/hajoon/HCI/DevFlow/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport Editor from \"./components/editor/editor\";\nimport \"./App.css\";\nimport Arrow from \"./Arrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: how to make the relevant files pop up?\n  const [files] = useState([{\n    name: \"example.js\",\n    content: \"// JavaScript content\",\n    linesToColor: {\n      \"-1\": [],\n      1: [1, 2, 3, 4, 5],\n      2: [1, 2, 3]\n    }\n  }, {\n    name: \"example.py\",\n    content: \"# Python content\",\n    linesToColor: {\n      \"-1\": [],\n      1: [4, 5, 6, 7, 8, 9, 10],\n      2: [2, 3],\n      3: []\n    }\n  }]);\n\n  // State to keep track of the currently selected file\n  // TODO: when the name of current file changes (when we switch to another file), update the lines to update as well\n  const [currentFile, setCurrentFile] = useState(files[0]);\n  const handleContentChange = useCallback(newFile => {\n    const fileIndex = files.findIndex(file => file.name === newFile.name);\n    files[fileIndex].content = newFile.content;\n  }, [currentFile]);\n  let outlineID = \"-1\";\n  let colorToUse = \"blue\";\n\n  // When clicking outline, outlineID and colorToUse updated\n  function handleClickOnOutline() {\n    outlineID = \"\";\n    colorToUse = \"red\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 20,\n          border: \"1px solid gray\",\n          padding: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Arrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dummy-div\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" This is a dummy block -------------------!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-selector\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filename-button\",\n          onClick: () => setCurrentFile(file),\n          children: file.name\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        linesToColor: currentFile.linesToColor[outlineID],\n        colorToUse: colorToUse,\n        currentFile: currentFile,\n        onContentChange: handleContentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3QIfp8147PjAIengAXdUoMY2ft0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Editor","Arrow","jsxDEV","_jsxDEV","App","_s","files","name","content","linesToColor","currentFile","setCurrentFile","handleContentChange","newFile","fileIndex","findIndex","file","outlineID","colorToUse","handleClickOnOutline","className","children","style","margin","border","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onContentChange","_c","$RefreshReg$"],"sources":["/Users/hajoon/HCI/DevFlow/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Editor from \"./components/editor/editor\";\nimport \"./App.css\";\nimport Arrow from \"./Arrow\";\n\nfunction App() {\n  // TODO: how to make the relevant files pop up?\n  const [files] = useState([\n    {\n      name: \"example.js\",\n      content: \"// JavaScript content\",\n      linesToColor: { \"-1\": [], 1: [1, 2, 3, 4, 5], 2: [1, 2, 3] },\n    },\n    {\n      name: \"example.py\",\n      content: \"# Python content\",\n      linesToColor: { \"-1\": [], 1: [4, 5, 6, 7, 8, 9, 10], 2: [2, 3], 3: [] },\n    },\n  ]);\n\n  // State to keep track of the currently selected file\n  // TODO: when the name of current file changes (when we switch to another file), update the lines to update as well\n  const [currentFile, setCurrentFile] = useState(files[0]);\n\n  const handleContentChange = useCallback(\n    (newFile) => {\n      const fileIndex = files.findIndex((file) => file.name === newFile.name);\n      files[fileIndex].content = newFile.content;\n    },\n    [currentFile]\n  );\n\n  let outlineID = \"-1\";\n  let colorToUse = \"blue\";\n\n  // When clicking outline, outlineID and colorToUse updated\n  function handleClickOnOutline() {\n    outlineID = \"\";\n    colorToUse = \"red\";\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div style={{ margin: 20, border: \"1px solid gray\", padding: 10 }}>\n          <h2>Solution</h2>\n          <Arrow />\n        </div>\n      </div>\n      <div className=\"dummy-div\">\n        <p> This is a dummy block -------------------!</p>\n      </div>\n      <div className=\"editor-window\">\n        <div className=\"file-selector\">\n          {files.map((file) => (\n            <button\n              className=\"filename-button\"\n              key={file.name}\n              onClick={() => setCurrentFile(file)}\n            >\n              {file.name}\n            </button>\n          ))}\n        </div>\n        <Editor\n          linesToColor={currentFile.linesToColor[outlineID]}\n          colorToUse={colorToUse}\n          currentFile={currentFile}\n          onContentChange={handleContentChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}