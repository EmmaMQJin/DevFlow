{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\n// Editor.js\nimport React from 'react';\nimport { EditorView, gutter, GutterMarker } from \"@codemirror/view\";\nimport { basicSetup } from \"codemirror\";\nimport { useEditor } from \"@codemirror/react\";\nimport { RangeSet } from \"@codemirror/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RedGutterMarker extends GutterMarker {\n  toDOM() {\n    const marker = document.createElement('div');\n    marker.style.color = 'red';\n    marker.textContent = '●'; // Or any marker symbol you prefer\n    return marker;\n  }\n}\nexport const Editor = ({\n  redLines\n}) => {\n  _s();\n  const redLineGutter = gutter({\n    lineMarker: (view, line) => {\n      if (redLines.includes(view.state.doc.lineAt(line.from).number)) {\n        return new RedGutterMarker();\n      }\n      return null;\n    }\n  });\n  const extensions = [basicSetup, redLineGutter];\n  const [editorView, setEditorView] = useEditor({\n    extensions,\n    onChange: value => {\n      console.log(value);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setEditorView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"VByv4wx1zuKDV8Bx5ObvpuR7AVM=\", false, function () {\n  return [useEditor];\n});\n_c = Editor;\nexport default Editor;\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","EditorView","gutter","GutterMarker","basicSetup","useEditor","RangeSet","jsxDEV","_jsxDEV","RedGutterMarker","toDOM","marker","document","createElement","style","color","textContent","Editor","redLines","_s","redLineGutter","lineMarker","view","line","includes","state","doc","lineAt","from","number","extensions","editorView","setEditorView","onChange","value","console","log","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["// Editor.js\nimport React from 'react';\nimport { EditorView, gutter, GutterMarker } from \"@codemirror/view\";\nimport { basicSetup } from \"codemirror\";\nimport { useEditor } from \"@codemirror/react\";\nimport { RangeSet } from \"@codemirror/state\";\n\nclass RedGutterMarker extends GutterMarker {\n  toDOM() {\n    const marker = document.createElement('div');\n    marker.style.color = 'red';\n    marker.textContent = '●'; // Or any marker symbol you prefer\n    return marker;\n  }\n}\n\nexport const Editor = ({ redLines }) => {\n  const redLineGutter = gutter({\n    lineMarker: (view, line) => {\n      if (redLines.includes(view.state.doc.lineAt(line.from).number)) {\n        return new RedGutterMarker();\n      }\n      return null;\n    },\n  });\n\n  const extensions = [basicSetup, redLineGutter];\n  \n  const [editorView, setEditorView] = useEditor({\n    extensions,\n    onChange: (value) => {\n      console.log(value);\n    },\n  });\n\n  return <div ref={setEditorView} />;\n};\n\n\nexport default Editor;\n\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,MAAM,EAAEC,YAAY,QAAQ,kBAAkB;AACnE,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,SAASN,YAAY,CAAC;EACzCO,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5CF,MAAM,CAACG,KAAK,CAACC,KAAK,GAAG,KAAK;IAC1BJ,MAAM,CAACK,WAAW,GAAG,GAAG,CAAC,CAAC;IAC1B,OAAOL,MAAM;EACf;AACF;AAEA,OAAO,MAAMM,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,aAAa,GAAGlB,MAAM,CAAC;IAC3BmB,UAAU,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK;MAC1B,IAAIL,QAAQ,CAACM,QAAQ,CAACF,IAAI,CAACG,KAAK,CAACC,GAAG,CAACC,MAAM,CAACJ,IAAI,CAACK,IAAI,CAAC,CAACC,MAAM,CAAC,EAAE;QAC9D,OAAO,IAAIpB,eAAe,CAAC,CAAC;MAC9B;MACA,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,MAAMqB,UAAU,GAAG,CAAC1B,UAAU,EAAEgB,aAAa,CAAC;EAE9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAG3B,SAAS,CAAC;IAC5CyB,UAAU;IACVG,QAAQ,EAAGC,KAAK,IAAK;MACnBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,CAAC;EAEF,oBAAO1B,OAAA;IAAK6B,GAAG,EAAEL;EAAc;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACtB,EAAA,CApBWF,MAAM;EAAA,QAYmBZ,SAAS;AAAA;AAAAqC,EAAA,GAZlCzB,MAAM;AAuBnB,eAAeA,MAAM;;AAGrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}