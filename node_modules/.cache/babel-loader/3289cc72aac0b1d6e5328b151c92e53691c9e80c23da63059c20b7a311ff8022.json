{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, GutterMarker, lineNumbers } from '@codemirror/view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ColoredGutterMarker extends GutterMarker {\n  constructor(color) {\n    super(); // Call the parent class constructor\n    this.color = color; // Store the color value\n  }\n  toDOM() {\n    const marker = document.createElement('div');\n    marker.style.background = this.color;\n    marker.style.width = '5px'; // Set the width of the block\n    marker.style.height = '100%';\n    return marker;\n  }\n}\n// Editor component\nconst EditorComponent = ({\n  linesToColor,\n  colorToUse\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    // Initialize editor state with custom gutter\n    const startState = EditorState.create({\n      doc: '// Your code here\\n',\n      extensions: [\n      // basicSetup,\n      gutter({\n        class: 'custom-gutter',\n        lineMarker: (view, line) => {\n          // Check if the current line number should have a red marker\n          const lineNumber = view.state.doc.lineAt(line.from).number;\n          // console.log(lineNumber);\n          if (linesToColor.includes(lineNumber)) {\n            return new ColoredGutterMarker(colorToUse);\n          }\n          return null; // Default markers or no marker\n        }\n      }), lineNumbers()]\n    });\n\n    // Create a new EditorView\n    const view = new EditorView({\n      state: startState,\n      parent: editorRef.current\n    });\n\n    // Cleanup function to destroy the editor view when the component unmounts\n    return () => {\n      view.destroy();\n    };\n  }, [linesToColor, colorToUse]); // Dependency array to re-initialize the editor if linesToColor change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(EditorComponent, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = EditorComponent;\nexport default EditorComponent;\nvar _c;\n$RefreshReg$(_c, \"EditorComponent\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","EditorView","gutter","GutterMarker","lineNumbers","jsxDEV","_jsxDEV","ColoredGutterMarker","constructor","color","toDOM","marker","document","createElement","style","background","width","height","EditorComponent","linesToColor","colorToUse","_s","editorRef","current","startState","create","doc","extensions","class","lineMarker","view","line","lineNumber","state","lineAt","from","number","includes","parent","destroy","ref","fileName","_jsxFileName","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, GutterMarker, lineNumbers } from '@codemirror/view';\n\nclass ColoredGutterMarker extends GutterMarker {\n  constructor(color) {\n    super(); // Call the parent class constructor\n    this.color = color; // Store the color value\n  }\n  toDOM() {\n    const marker = document.createElement('div');\n    marker.style.background = this.color;\n    marker.style.width = '5px'; // Set the width of the block\n    marker.style.height = '100%'\n    return marker;\n  }\n}\n// Editor component\nconst EditorComponent = ({ linesToColor, colorToUse }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    // Initialize editor state with custom gutter\n    const startState = EditorState.create({\n      doc: '// Your code here\\n',\n      extensions: [\n        // basicSetup,\n        gutter({\n          class: 'custom-gutter',\n          lineMarker: (view, line) => {\n            // Check if the current line number should have a red marker\n            const lineNumber = view.state.doc.lineAt(line.from).number;\n            // console.log(lineNumber);\n            if (linesToColor.includes(lineNumber)) {\n              return new ColoredGutterMarker(colorToUse);\n            }\n            return null; // Default markers or no marker\n          },\n        }),\n        lineNumbers(),\n      ],\n    });\n\n    // Create a new EditorView\n    const view = new EditorView({\n      state: startState,\n      parent: editorRef.current,\n    });\n\n    // Cleanup function to destroy the editor view when the component unmounts\n    return () => {\n      view.destroy();\n    };\n  }, [linesToColor, colorToUse]); // Dependency array to re-initialize the editor if linesToColor change\n\n  return <div ref={editorRef} />;\n};\n\nexport default EditorComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,EAAEC,MAAM,EAAEC,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,mBAAmB,SAASJ,YAAY,CAAC;EAC7CK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAAC,CAAC,CAAC,CAAC;IACT,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC,CAAC;EACtB;EACAC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5CF,MAAM,CAACG,KAAK,CAACC,UAAU,GAAG,IAAI,CAACN,KAAK;IACpCE,MAAM,CAACG,KAAK,CAACE,KAAK,GAAG,KAAK,CAAC,CAAC;IAC5BL,MAAM,CAACG,KAAK,CAACG,MAAM,GAAG,MAAM;IAC5B,OAAON,MAAM;EACf;AACF;AACA;AACA,MAAMO,eAAe,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACwB,SAAS,CAACC,OAAO,EAAE;;IAExB;IACA,MAAMC,UAAU,GAAGxB,WAAW,CAACyB,MAAM,CAAC;MACpCC,GAAG,EAAE,qBAAqB;MAC1BC,UAAU,EAAE;MACV;MACAzB,MAAM,CAAC;QACL0B,KAAK,EAAE,eAAe;QACtBC,UAAU,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK;UAC1B;UACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,KAAK,CAACP,GAAG,CAACQ,MAAM,CAACH,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM;UAC1D;UACA,IAAIjB,YAAY,CAACkB,QAAQ,CAACL,UAAU,CAAC,EAAE;YACrC,OAAO,IAAIzB,mBAAmB,CAACa,UAAU,CAAC;UAC5C;UACA,OAAO,IAAI,CAAC,CAAC;QACf;MACF,CAAC,CAAC,EACFhB,WAAW,CAAC,CAAC;IAEjB,CAAC,CAAC;;IAEF;IACA,MAAM0B,IAAI,GAAG,IAAI7B,UAAU,CAAC;MAC1BgC,KAAK,EAAET,UAAU;MACjBc,MAAM,EAAEhB,SAAS,CAACC;IACpB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXO,IAAI,CAACS,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACpB,YAAY,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAEhC,oBAAOd,OAAA;IAAKkC,GAAG,EAAElB;EAAU;IAAAmB,QAAA,EAAAC,YAAA;IAAAV,UAAA;IAAAW,YAAA;EAAA,OAAE,CAAC;AAChC,CAAC;AAACtB,EAAA,CAxCIH,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}