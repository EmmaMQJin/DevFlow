{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Editor from './components/editor/editor';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files] = useState([{\n    name: \"example.js\",\n    content: \"// JavaScript content\"\n  }, {\n    name: \"example.py\",\n    content: \"# Python content\"\n  }\n  // Add more files as needed\n  ]);\n\n  // State to keep track of the currently selected file\n  // TODO: when the name of current file changes (when we switch to another file), update the lines to update as well\n  const [currentFile, setCurrentFile] = useState(files[0]);\n  const handleContentChange = useCallback(newFile => {\n    const fileIndex = files.findIndex(file => file.name === newFile.name);\n    files[fileIndex].content = newFile.content;\n  }, [currentFile.name]);\n  const linesToColor = [2, 3, 4, 6, 7, 8, 9];\n  const colorToUse = \"red\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-selector\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filename-button\",\n          onClick: () => setCurrentFile(file),\n          children: file.name\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        linesToColor: linesToColor,\n        colorToUse: colorToUse,\n        currentFile: currentFile,\n        onContentChange: handleContentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/vadAJcUWjR6Wg8tN9l74W4p9Vg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Editor","jsxDEV","_jsxDEV","App","_s","files","name","content","currentFile","setCurrentFile","handleContentChange","newFile","fileIndex","findIndex","file","linesToColor","colorToUse","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onContentChange","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Editor from './components/editor/editor';\nimport './App.css'\n\nfunction App() {\n  const [files] = useState([\n    { name: \"example.js\", content: \"// JavaScript content\" },\n    { name: \"example.py\", content: \"# Python content\" },\n    // Add more files as needed\n  ]);\n\n  // State to keep track of the currently selected file\n  // TODO: when the name of current file changes (when we switch to another file), update the lines to update as well\n  const [currentFile, setCurrentFile] = useState(files[0]);\n\n  const handleContentChange = useCallback((newFile) => {\n    const fileIndex = files.findIndex(file => file.name === newFile.name);\n    files[fileIndex].content = newFile.content;\n  }, [currentFile.name]);\n\n  const linesToColor = [2, 3, 4, 6, 7, 8, 9];\n  const colorToUse = \"red\";\n  return (\n    <div className=\"App\">\n      <div className='editor-window'>\n        <div className=\"file-selector\">\n          {files.map(file => (\n            <button className=\"filename-button\" key={file.name} onClick={() => setCurrentFile(file)}>\n              {file.name}\n            </button>\n          ))}\n        </div>\n        <Editor linesToColor={linesToColor} colorToUse={colorToUse} currentFile={currentFile} onContentChange={handleContentChange} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,CAAC,GAAGP,QAAQ,CAAC,CACvB;IAAEQ,IAAI,EAAE,YAAY;IAAEC,OAAO,EAAE;EAAwB,CAAC,EACxD;IAAED,IAAI,EAAE,YAAY;IAAEC,OAAO,EAAE;EAAmB;EAClD;EAAA,CACD,CAAC;;EAEF;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC;EAExD,MAAMK,mBAAmB,GAAGX,WAAW,CAAEY,OAAO,IAAK;IACnD,MAAMC,SAAS,GAAGP,KAAK,CAACQ,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACR,IAAI,KAAKK,OAAO,CAACL,IAAI,CAAC;IACrED,KAAK,CAACO,SAAS,CAAC,CAACL,OAAO,GAAGI,OAAO,CAACJ,OAAO;EAC5C,CAAC,EAAE,CAACC,WAAW,CAACF,IAAI,CAAC,CAAC;EAEtB,MAAMS,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAMC,UAAU,GAAG,KAAK;EACxB,oBACEd,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhB,OAAA;QAAKe,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3Bb,KAAK,CAACc,GAAG,CAACL,IAAI,iBACbZ,OAAA;UAAQe,SAAS,EAAC,iBAAiB;UAAiBG,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACK,IAAI,CAAE;UAAAI,QAAA,EACrFJ,IAAI,CAACR;QAAI,GAD6BQ,IAAI,CAACR,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE1C,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtB,OAAA,CAACF,MAAM;QAACe,YAAY,EAAEA,YAAa;QAACC,UAAU,EAAEA,UAAW;QAACR,WAAW,EAAEA,WAAY;QAACiB,eAAe,EAAEf;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3H;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAhCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}