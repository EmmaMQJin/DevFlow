{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\n// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, gutter } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { RedTextMarker } from './linemarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  value,\n  linesToMarkInRed\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (!editorRef.current) return;\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), gutter(), EditorView.lineNumbers(), EditorView.decorations.of(view => {\n        const builder = new RangeSetBuilder();\n        linesToMarkInRed.forEach(line => {\n          const pos = view.state.doc.line(line).from;\n          builder.add(pos, pos, new RedTextMarker());\n        });\n        return builder.finish();\n      })]\n    });\n    const editorView = new EditorView({\n      state: startState,\n      parent: editorRef.current\n    });\n    return () => editorView.destroy();\n  }, [value, linesToMarkInRed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    className: \"editor-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","RangeSetBuilder","EditorView","gutter","javascript","RedTextMarker","jsxDEV","_jsxDEV","Editor","value","linesToMarkInRed","_s","editorRef","current","startState","create","doc","extensions","lineNumbers","decorations","of","view","builder","forEach","line","pos","state","from","add","finish","editorView","parent","destroy","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, gutter } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { RedTextMarker } from './linemarker';\n\nconst Editor = ({ value, linesToMarkInRed }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        gutter(),\n        EditorView.lineNumbers(),\n        EditorView.decorations.of((view) => {\n          const builder = new RangeSetBuilder();\n          linesToMarkInRed.forEach(line => {\n            const pos = view.state.doc.line(line).from;\n            builder.add(pos, pos, new RedTextMarker());\n          });\n          return builder.finish();\n        }),\n      ],\n    });\n\n    const editorView = new EditorView({\n      state: startState,\n      parent: editorRef.current,\n    });\n\n    return () => editorView.destroy();\n  }, [value, linesToMarkInRed]);\n\n  return <div ref={editorRef} className=\"editor-container\"></div>;\n};\n\nexport default Editor;\n\n\n\n\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,eAAe,QAAQ,mBAAmB;AAChE,SAASC,UAAU,EAAEC,MAAM,QAAQ,kBAAkB;AACrD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,SAAS,CAACC,OAAO,EAAE;IAExB,MAAMC,UAAU,GAAGd,WAAW,CAACe,MAAM,CAAC;MACpCC,GAAG,EAAEP,KAAK;MACVQ,UAAU,EAAE,CACVb,UAAU,CAAC,CAAC,EACZD,MAAM,CAAC,CAAC,EACRD,UAAU,CAACgB,WAAW,CAAC,CAAC,EACxBhB,UAAU,CAACiB,WAAW,CAACC,EAAE,CAAEC,IAAI,IAAK;QAClC,MAAMC,OAAO,GAAG,IAAIrB,eAAe,CAAC,CAAC;QACrCS,gBAAgB,CAACa,OAAO,CAACC,IAAI,IAAI;UAC/B,MAAMC,GAAG,GAAGJ,IAAI,CAACK,KAAK,CAACV,GAAG,CAACQ,IAAI,CAACA,IAAI,CAAC,CAACG,IAAI;UAC1CL,OAAO,CAACM,GAAG,CAACH,GAAG,EAAEA,GAAG,EAAE,IAAIpB,aAAa,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;QACF,OAAOiB,OAAO,CAACO,MAAM,CAAC,CAAC;MACzB,CAAC,CAAC;IAEN,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAG,IAAI5B,UAAU,CAAC;MAChCwB,KAAK,EAAEZ,UAAU;MACjBiB,MAAM,EAAEnB,SAAS,CAACC;IACpB,CAAC,CAAC;IAEF,OAAO,MAAMiB,UAAU,CAACE,OAAO,CAAC,CAAC;EACnC,CAAC,EAAE,CAACvB,KAAK,EAAEC,gBAAgB,CAAC,CAAC;EAE7B,oBAAOH,OAAA;IAAK0B,GAAG,EAAErB,SAAU;IAACsB,SAAS,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjE,CAAC;AAAC3B,EAAA,CAhCIH,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAkCZ,eAAeA,MAAM;;AAMrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}