{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\n// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, StateEffect, StateField } from '@codemirror/state';\nimport { EditorView, lineNumbers, gutter, GutterMarker, Decoration } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  value,\n  onChange,\n  specialLineNumbers,\n  specialLineColor\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), lineNumbers(), EditorView.lineNumberGutter({\n        // Custom line number styling function\n        formatNumber: number => {\n          // Check if the current line number should have special styling\n          if (specialLineNumbers.includes(number)) {\n            // Return a span element with custom styling for special line numbers\n            const span = document.createElement(\"span\");\n            span.style.color = specialLineColor; // Apply the special color\n            span.textContent = number;\n            return span;\n          }\n          // Default text content for line numbers not in the special list\n          return number;\n        }\n      })]\n    });\n    new EditorView({\n      state: startState,\n      parent: editorRef.current\n    });\n\n    // Cleanup\n    return () => {\n      var _editorRef$current, _editorRef$current$fi;\n      return (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : (_editorRef$current$fi = _editorRef$current.firstChild) === null || _editorRef$current$fi === void 0 ? void 0 : _editorRef$current$fi.remove();\n    };\n  }, [value, specialLineNumbers, specialLineColor]); // Depend on props\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    style: {\n      height: '400px',\n      border: '1px solid #ddd'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","StateEffect","StateField","EditorView","lineNumbers","gutter","GutterMarker","Decoration","javascript","jsxDEV","_jsxDEV","Editor","value","onChange","specialLineNumbers","specialLineColor","_s","editorRef","startState","create","doc","extensions","lineNumberGutter","formatNumber","number","includes","span","document","createElement","style","color","textContent","state","parent","current","_editorRef$current","_editorRef$current$fi","firstChild","remove","ref","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, StateEffect, StateField } from '@codemirror/state';\nimport { EditorView, lineNumbers, gutter, GutterMarker, Decoration } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\n\nconst Editor = ({ value, onChange, specialLineNumbers, specialLineColor }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        lineNumbers(),\n        EditorView.lineNumberGutter({\n          // Custom line number styling function\n          formatNumber: (number) => {\n            // Check if the current line number should have special styling\n            if (specialLineNumbers.includes(number)) {\n              // Return a span element with custom styling for special line numbers\n              const span = document.createElement(\"span\");\n              span.style.color = specialLineColor; // Apply the special color\n              span.textContent = number;\n              return span;\n            }\n            // Default text content for line numbers not in the special list\n            return number;\n          }\n        })\n      ],\n    });\n\n    new EditorView({\n      state: startState,\n      parent: editorRef.current,\n    });\n\n    // Cleanup\n    return () => editorRef.current?.firstChild?.remove();\n  }, [value, specialLineNumbers, specialLineColor]); // Depend on props\n\n  return <div ref={editorRef} style={{ height: '400px', border: '1px solid #ddd' }} />;\n};\n\nexport default Editor;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,mBAAmB;AACxE,SAASC,UAAU,EAAEC,WAAW,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,QAAQ,kBAAkB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,kBAAkB;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAMC,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAGlB,WAAW,CAACmB,MAAM,CAAC;MACpCC,GAAG,EAAER,KAAK;MACVS,UAAU,EAAE,CACVb,UAAU,CAAC,CAAC,EACZJ,WAAW,CAAC,CAAC,EACbD,UAAU,CAACmB,gBAAgB,CAAC;QAC1B;QACAC,YAAY,EAAGC,MAAM,IAAK;UACxB;UACA,IAAIV,kBAAkB,CAACW,QAAQ,CAACD,MAAM,CAAC,EAAE;YACvC;YACA,MAAME,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;YAC3CF,IAAI,CAACG,KAAK,CAACC,KAAK,GAAGf,gBAAgB,CAAC,CAAC;YACrCW,IAAI,CAACK,WAAW,GAAGP,MAAM;YACzB,OAAOE,IAAI;UACb;UACA;UACA,OAAOF,MAAM;QACf;MACF,CAAC,CAAC;IAEN,CAAC,CAAC;IAEF,IAAIrB,UAAU,CAAC;MACb6B,KAAK,EAAEd,UAAU;MACjBe,MAAM,EAAEhB,SAAS,CAACiB;IACpB,CAAC,CAAC;;IAEF;IACA,OAAO;MAAA,IAAAC,kBAAA,EAAAC,qBAAA;MAAA,QAAAD,kBAAA,GAAMlB,SAAS,CAACiB,OAAO,cAAAC,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAmBE,UAAU,cAAAD,qBAAA,uBAA7BA,qBAAA,CAA+BE,MAAM,CAAC,CAAC;IAAA;EACtD,CAAC,EAAE,CAAC1B,KAAK,EAAEE,kBAAkB,EAAEC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAEnD,oBAAOL,OAAA;IAAK6B,GAAG,EAAEtB,SAAU;IAACY,KAAK,EAAE;MAAEW,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAiB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtF,CAAC;AAAC7B,EAAA,CArCIL,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}