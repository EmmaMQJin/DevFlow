{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/outline.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Editor from \"./editor\";\nimport \"./outline.css\";\nimport { useCollapse } from \"react-collapsed\";\nimport Xarrow from 'react-xarrows';\nimport { Box } from \"./box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Outline(props) {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [files, setFiles] = useState([]);\n  const [currentFile, setCurrentFile] = useState(null);\n  const [outlineID, setOutlineID] = useState(\"\");\n  const [colorToUse, setColorToUse] = useState(\"red\");\n  const [activeButton, setActiveButton] = useState(\"\"); // Track active button\n  const [showPopup, setShowPopup] = useState(false); // Popup visibility state\n\n  // Define folder structure and toggle functionality\n  const [folders, setFolders] = useState([{\n    name: \"Home Page\",\n    children: [{\n      name: \"Parse info into files\"\n    }, {\n      name: \"Format and Display Pics\"\n    }],\n    isOpen: false\n  }, {\n    name: \"Order Online\",\n    children: [{\n      name: \"Connect Doordash API\"\n    }, {\n      name: \"Read Menu to JSON\"\n    }],\n    isOpen: false\n  }, {\n    name: \"Contact Us\",\n    children: [{\n      name: \"Format Footer\"\n    }],\n    isOpen: false\n  }]);\n  const toggleFolder = folderName => {\n    setFolders(prevFolders => prevFolders.map(folder => folder.name === folderName ? {\n      ...folder,\n      isOpen: !folder.isOpen\n    } : folder));\n  };\n\n  // Fetch files when the component mounts\n  useEffect(() => {\n    async function fetchFiles() {\n      try {\n        const responses = await Promise.all([fetch('/example-code/apis.py'), fetch('/example-code/parse.py'), fetch('/example-code/format.py')]);\n        if (responses.every(response => response.ok)) {\n          const [apiText, parseText, setupText] = await Promise.all(responses.map(response => response.text()));\n          console.log(apiText);\n          const newFiles = [{\n            name: \"apis.py\",\n            content: apiText,\n            linesToColor: {\n              \"\": [],\n              \"Connect Doordash API\": [15, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114],\n              \"Read Menu to JSON\": [19, 20, 21, 22, 23]\n            }\n          }, {\n            name: \"parse.py\",\n            content: parseText,\n            linesToColor: {\n              \"\": [],\n              \"Connect Doordash API\": [],\n              \"Read Menu to JSON\": [6, 7, 8, 9, 10, 11, 12]\n            }\n          }, {\n            name: \"format.py\",\n            content: setupText,\n            linesToColor: {\n              \"\": [],\n              \"Connect Doordash API\": [],\n              \"Read Menu to JSON\": [6, 7, 8]\n            }\n          }];\n          setFiles(newFiles);\n          setCurrentFile(newFiles[0]); // Set the first file as the current file after fetching\n        } else {\n          throw new Error('Failed to fetch one or more files');\n        }\n      } catch (error) {\n        console.error(\"Error fetching files:\", error);\n      }\n    }\n    fetchFiles();\n  }, []);\n  const handleContentChange = useCallback(({\n    name,\n    content,\n    linesToColor\n  }) => {\n    if (currentFile) {\n      const updatedFiles = files.map(file => {\n        if (file.name === currentFile.name) {\n          console.log(\"Updating file:\", file.name);\n          return {\n            ...file,\n            content,\n            ...(linesToColor && {\n              linesToColor\n            })\n          };\n        }\n        return file;\n      });\n      setFiles(updatedFiles);\n      setCurrentFile(prev => ({\n        ...prev,\n        content,\n        ...(linesToColor && {\n          linesToColor\n        })\n      }));\n    }\n  }, [currentFile, files]);\n  const handleButtonClick = buttonName => {\n    setActiveButton(buttonName);\n  };\n  const handleEditOutlineClick = () => {\n    setShowPopup(true);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  if (!currentFile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading files...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 28\n  }, this);\n\n  // Main App\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vscode-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"vscode-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"editor-title\",\n            children: [\"Outline\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined help\",\n              children: \"help\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FolderStructure, {\n            folders: folders,\n            onToggleFolder: toggleFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-outline-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button edit-outline\",\n            onClick: handleEditOutlineClick,\n            children: \"Edit Outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"terminal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-window\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-selector\",\n            children: files.map(file => {\n              const is_highlighted = file.linesToColor[outlineID].length !== 0;\n              const is_hidden = outlineID !== \"Read Menu to JSON\" && file.name === \"format.py\";\n              const buttonStyle = is_highlighted ? {\n                borderBottom: `10px solid ${colorToUse}`\n              } : {};\n              const buttonClass = is_hidden ? \"filename-button-hidden\" : \"filename-button\";\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                className: buttonClass,\n                onClick: () => setCurrentFile(file),\n                children: file.name\n              }, file.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            linesToColor: currentFile.linesToColor[outlineID],\n            colorToUse: colorToUse,\n            currentFile: currentFile,\n            onContentChange: handleContentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      onClose: handlePopupClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n  function FolderStructure({\n    folders,\n    onToggleFolder\n  }) {\n    _s();\n    const [totalHeight, setTotalHeight] = useState(0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-structure\",\n      children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(FolderItem, {\n        folder: folder,\n        index: index,\n        totalHeight: totalHeight,\n        setTotalHeight: setTotalHeight,\n        onToggleFolder: onToggleFolder,\n        setOutlineID: setOutlineID // Pass setOutlineID as a prop\n        ,\n        setColorToUse: setColorToUse // Pass setColorToUse as a prop\n      }, folder.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n  _s(FolderStructure, \"Tkjh7eE4zD5uly5eOXxLIFsQmhg=\");\n  function FolderItem({\n    folder,\n    index,\n    totalHeight,\n    setTotalHeight,\n    onToggleFolder,\n    setOutlineID,\n    setColorToUse\n  }) {\n    _s2();\n    const {\n      getCollapseProps,\n      getToggleProps,\n      isExpanded\n    } = useCollapse({\n      defaultExpanded: folder.isOpen\n    });\n    const folderHeight = isExpanded ? 30 + folder.children.length * 20 : 30;\n    const top = index === 0 ? 0 : totalHeight;\n    const [selectedSubfolder, setSelectedSubfolder] = useState(null);\n    const handleSubfolderClick = (e, subfolderName) => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(subfolderName);\n      if (subfolderName === \"Connect Doordash API\") {\n        // When outlineID is -1, set it to 2 and colorToUse to blue\n        setOutlineID(\"Connect Doordash API\");\n        setColorToUse(\"#32D4CC\");\n      } else if (subfolderName === \"Read Menu to JSON\") {\n        setOutlineID(\"Read Menu to JSON\");\n        setColorToUse(\"#FFEA99\");\n      } else {\n        // When outlineID is not -1, set it to -1 and colorToUse to red\n        setOutlineID(\"\");\n        setColorToUse(\"red\");\n      }\n      // Toggle selection or set new subfolder\n      if (selectedSubfolder === subfolderName) {\n        setSelectedSubfolder(null); // Reset if the same subfolder is clicked\n      } else {\n        setSelectedSubfolder(subfolderName);\n      }\n    };\n    const getColorForSubfolder = subfolderName => {\n      if (subfolderName === \"Connect Doordash API\") {\n        return \"#32D4CC\"; // Blue\n      } else if (subfolderName === \"Read Menu to JSON\") {\n        return \"#FFEA99\"; // Light yellow\n      } else {\n        return \"red\"; // Default to red\n      }\n    };\n    const [connections, setConnections] = useState([]);\n    const handleClosePopup = () => {\n      setShowPopup(false);\n    };\n    const [arrows, setArrows] = useState([]);\n    const addArrow = ({\n      start,\n      end\n    }) => {\n      setArrows([...arrows, {\n        start,\n        end\n      }]);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-item\",\n      style: {\n        top\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-toggle\",\n        onClick: () => onToggleFolder(folder.name)\n        // {...getToggleProps()}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `material-symbols-outlined ${isExpanded ? \"folder-open\" : \"folder\"}`,\n          children: \"chevron_right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"folder-name\",\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), folder.children && isExpanded && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subfolders\",\n        ...getCollapseProps(),\n        children: folder.children.map(subfolder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"subfolder-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"subfolder-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"subfolder-text\",\n              onClick: e => handleSubfolderClick(e, subfolder.name),\n              style: {\n                color: subfolder.name === selectedSubfolder ? getColorForSubfolder(subfolder.name) : 'initial'\n              },\n              children: subfolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              addArrow: addArrow,\n              handler: \"right\",\n              boxId: subfolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), arrows.map(ar => /*#__PURE__*/_jsxDEV(Xarrow, {\n            start: ar.start,\n            end: ar.end\n          }, ar.start + \"-.\" + ar.end, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this))]\n        }, subfolder.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), connections.map((conn, idx) => /*#__PURE__*/_jsxDEV(Xarrow, {\n        start: conn.start,\n        end: conn.end,\n        startAnchor: \"auto\",\n        endAnchor: \"auto\",\n        color: \"magenta\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n  // function DragPopup({ onClose }) {\n  //   return (\n  //     <div className=\"dragpopup\">\n  //       <div className=\"popup-header\">\n  //         <h2 className=\"popup-title\">\n  //           Link Code to Note \"Connect Doordash API\"\n  //         </h2>\n  //         <button className=\"popup-close\" onClick={onClose}>\n  //           &times;\n  //         </button>\n  //       </div>\n  //       <div className=\"popup-content\">\n  //         <label>\n  //           <input\n  //             type=\"radio\"\n  //             name=\"myRadio\"\n  //             value=\"option1\"\n  //             defaultChecked={true}\n  //           />\n  //           Link Line 7\n  //         </label>\n  //         <br></br>\n  //         <label className=\"popup-deactivated\">\n  //           <input type=\"radio\" name=\"myRadio\" value=\"option2\" />\n  //           Link get_delivery\n  //         </label>\n  //         <br></br>\n  //         <label className=\"popup-deactivated\">\n  //           <input type=\"radio\" name=\"myRadio\" value=\"option3\" />\n  //           Customize the range\n  //         </label>\n  //         <br></br>\n\n  //         <label className=\"popup-deactivated\">\n  //           From: <input name=\"from\" />\n  //         </label>\n  //         <br></br>\n  //         <label className=\"popup-deactivated\">\n  //           To: <input name=\"to\" />\n  //         </label>\n  //       </div>\n  //       <div className=\"popup-footer\">\n  //         <button className=\"popup-button cancel\">Cancel</button>\n  //         <button className=\"popup-button save\" onClick={onClose}>Save</button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  _s2(FolderItem, \"RDOz1H5TXTbvcfjulSUpwVoi2Tg=\", false, function () {\n    return [useCollapse];\n  });\n  function Popup({\n    onClose\n  }) {\n    const folders = [{\n      name: \"Bakery Website\",\n      children: [{\n        name: \"Home Page\",\n        children: [{\n          name: \"Parse info into files\"\n        }, {\n          name: \"Format and Display Pics\"\n        }]\n      }, {\n        name: \"Order Online\",\n        children: [{\n          name: \"Connect Doordash API\"\n        }, {\n          name: \"Read Menu to JSON\"\n        }]\n      }, {\n        name: \"Contact Us\",\n        children: [{\n          name: \"Format Footer\"\n        }]\n      }]\n    }];\n    const renderFolder = folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"folder-name\",\n        children: folder.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), folder.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subfolders\",\n        children: folder.children.map(subfolder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"subfolder\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            children: \"menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"folder-name\",\n            children: subfolder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this), subfolder.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"sub-subfolders\",\n            children: subfolder.children.map(subSubfolder => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"sub-subfolder\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"material-symbols-outlined\",\n                children: \"menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"folder-name\",\n                children: subSubfolder.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 25\n              }, this)]\n            }, subSubfolder.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 19\n          }, this)]\n        }, subfolder.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, folder.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup-title\",\n          children: \"Bakery Website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-close\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: folders.map(folder => renderFolder(folder))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-button cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-button save\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s3(Outline, \"1a7tQtViI11VkkVk3DAEMHwKYas=\");\n_c = Outline;\nvar _c;\n$RefreshReg$(_c, \"Outline\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Editor","useCollapse","Xarrow","Box","jsxDEV","_jsxDEV","Outline","props","_s3","_s","$RefreshSig$","_s2","files","setFiles","currentFile","setCurrentFile","outlineID","setOutlineID","colorToUse","setColorToUse","activeButton","setActiveButton","showPopup","setShowPopup","folders","setFolders","name","children","isOpen","toggleFolder","folderName","prevFolders","map","folder","fetchFiles","responses","Promise","all","fetch","every","response","ok","apiText","parseText","setupText","text","console","log","newFiles","content","linesToColor","Error","error","handleContentChange","updatedFiles","file","prev","handleButtonClick","buttonName","handleEditOutlineClick","handlePopupClose","fileName","_jsxFileName","lineNumber","columnNumber","className","FolderStructure","onToggleFolder","onClick","is_highlighted","length","is_hidden","buttonStyle","borderBottom","buttonClass","style","onContentChange","Popup","onClose","totalHeight","setTotalHeight","index","FolderItem","getCollapseProps","getToggleProps","isExpanded","defaultExpanded","folderHeight","top","selectedSubfolder","setSelectedSubfolder","handleSubfolderClick","e","subfolderName","preventDefault","stopPropagation","getColorForSubfolder","connections","setConnections","handleClosePopup","arrows","setArrows","addArrow","start","end","subfolder","class","color","handler","boxId","ar","conn","idx","startAnchor","endAnchor","renderFolder","subSubfolder","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/outline.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Editor from \"./editor\";\nimport \"./outline.css\";\nimport { useCollapse } from \"react-collapsed\";\nimport Xarrow from 'react-xarrows';\nimport { Box } from \"./box\";\n\nexport function Outline(props) {\n\n  const [files, setFiles] = useState([]);\n  const [currentFile, setCurrentFile] = useState(null);\n  const [outlineID, setOutlineID] = useState(\"\");\n  const [colorToUse, setColorToUse] = useState(\"red\");\n  const [activeButton, setActiveButton] = useState(\"\");  // Track active button\n  const [showPopup, setShowPopup] = useState(false);     // Popup visibility state\n\n  // Define folder structure and toggle functionality\n  const [folders, setFolders] = useState([\n    {\n      name: \"Home Page\",\n      children: [\n        { name: \"Parse info into files\" },\n        { name: \"Format and Display Pics\" },\n      ],\n      isOpen: false,\n    },\n    {\n      name: \"Order Online\",\n      children: [\n        { name: \"Connect Doordash API\" },\n        { name: \"Read Menu to JSON\" },\n      ],\n      isOpen: false,\n    },\n    {\n      name: \"Contact Us\",\n      children: [\n        { name: \"Format Footer\" }\n      ],\n      isOpen: false,\n    },\n  ]\n  );\n\n  const toggleFolder = (folderName) => {\n    setFolders(prevFolders =>\n      prevFolders.map(folder =>\n        folder.name === folderName ? { ...folder, isOpen: !folder.isOpen } : folder\n      )\n    );\n  };\n\n  // Fetch files when the component mounts\n  useEffect(() => {\n    async function fetchFiles() {\n      try {\n        const responses = await Promise.all([\n          fetch('/example-code/apis.py'),\n          fetch('/example-code/parse.py'),\n          fetch('/example-code/format.py')\n        ]);\n        if (responses.every(response => response.ok)) {\n          const [apiText, parseText, setupText] = await Promise.all(responses.map(response => response.text()));\n          console.log(apiText);\n          const newFiles = [\n            {\n              name: \"apis.py\",\n              content: apiText,\n              linesToColor: {\n                \"\": [],\n                \"Connect Doordash API\": [15, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114],\n                \"Read Menu to JSON\": [19, 20, 21, 22, 23],\n              },\n            },\n            {\n              name: \"parse.py\",\n              content: parseText,\n              linesToColor: { \"\": [], \"Connect Doordash API\": [], \"Read Menu to JSON\": [6, 7, 8, 9, 10, 11, 12] },\n            },\n            {\n              name: \"format.py\",\n              content: setupText,\n              linesToColor: { \"\": [], \"Connect Doordash API\": [], \"Read Menu to JSON\": [6, 7, 8] },\n            }\n          ];\n          setFiles(newFiles);\n          setCurrentFile(newFiles[0]); // Set the first file as the current file after fetching\n        } else {\n          throw new Error('Failed to fetch one or more files');\n        }\n      } catch (error) {\n        console.error(\"Error fetching files:\", error);\n      }\n    }\n    fetchFiles();\n  }, []);\n\n  const handleContentChange = useCallback(\n    ({ name, content, linesToColor }) => {\n      if (currentFile) {\n        const updatedFiles = files.map(file => {\n          if (file.name === currentFile.name) {\n            console.log(\"Updating file:\", file.name);\n            return { ...file, content, ...(linesToColor && { linesToColor }) };\n          }\n          return file;\n        });\n        setFiles(updatedFiles);\n        setCurrentFile(prev => ({\n          ...prev,\n          content,\n          ...(linesToColor && { linesToColor })\n        }));\n      }\n    },\n    [currentFile, files]\n  );\n  \n  const handleButtonClick = (buttonName) => {\n    setActiveButton(buttonName);\n  };\n\n  const handleEditOutlineClick = () => {\n    setShowPopup(true);\n  };\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n\n  if (!currentFile) return <div>Loading files...</div>; \n\n  // Main App\n  return (\n    <div className=\"vscode-app\">\n      <main className=\"vscode-main\">\n        <section className=\"editor\">\n          <div className=\"editor-placeholder\">\n            <h1 className=\"editor-title\">\n              Outline\n              <span className=\"material-symbols-outlined help\">help</span>\n            </h1>\n            <FolderStructure\n                folders={folders}\n                onToggleFolder={toggleFolder}\n            />\n          </div>\n            {/* Folder structure component */}\n          <div className=\"edit-outline-container\">\n            {/* Popup Code */}\n            <button\n              className=\"primary-button edit-outline\"\n              onClick={handleEditOutlineClick}\n            >\n              Edit Outline\n            </button>\n          </div>\n        </section>\n\n        <aside className=\"terminal\">\n          <div className=\"editor-window\">\n            <div className=\"file-selector\">\n              {files.map((file) => {\n                const is_highlighted =\n                  file.linesToColor[outlineID].length !== 0;\n                const is_hidden = outlineID !== \"Read Menu to JSON\" && file.name === \"format.py\";\n                const buttonStyle = is_highlighted\n                  ? { borderBottom: `10px solid ${colorToUse}` }\n                  : {};\n                const buttonClass = is_hidden\n                  ? \"filename-button-hidden\"\n                  : \"filename-button\";\n\n                return (\n                  <button\n                    style={buttonStyle}\n                    className={buttonClass}\n                    key={file.name}\n                    onClick={() => setCurrentFile(file)}\n                  >\n                    {file.name}\n                  </button>\n                );\n              })}\n            </div>\n            <Editor\n              linesToColor={currentFile.linesToColor[outlineID]}\n              colorToUse={colorToUse}\n              currentFile={currentFile}\n              onContentChange={handleContentChange}\n            />\n          </div>\n        </aside>\n      </main>\n      {showPopup && <Popup onClose={handlePopupClose} />}\n    </div>\n  );\n\n  function FolderStructure({ folders, onToggleFolder }) {\n    const [totalHeight, setTotalHeight] = useState(0);\n\n    return (\n      <div className=\"folder-structure\">\n        {folders.map((folder, index) => (\n          <FolderItem\n            key={folder.name}\n            folder={folder}\n            index={index}\n            totalHeight={totalHeight}\n            setTotalHeight={setTotalHeight}\n            onToggleFolder={onToggleFolder}\n            setOutlineID={setOutlineID} // Pass setOutlineID as a prop\n            setColorToUse={setColorToUse} // Pass setColorToUse as a prop\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function FolderItem({\n    folder,\n    index,\n    totalHeight,\n    setTotalHeight,\n    onToggleFolder,\n    setOutlineID,\n    setColorToUse,\n  }) {\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse({\n      defaultExpanded: folder.isOpen,\n    });\n\n    const folderHeight = isExpanded ? 30 + folder.children.length * 20 : 30;\n    const top = index === 0 ? 0 : totalHeight;\n\n    const [selectedSubfolder, setSelectedSubfolder] = useState(null);\n\n    const handleSubfolderClick = (e, subfolderName) => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(subfolderName);\n      if (subfolderName === \"Connect Doordash API\") {\n        // When outlineID is -1, set it to 2 and colorToUse to blue\n        setOutlineID(\"Connect Doordash API\");\n        setColorToUse(\"#32D4CC\");\n      } else if (subfolderName === \"Read Menu to JSON\") {\n        setOutlineID(\"Read Menu to JSON\");\n        setColorToUse(\"#FFEA99\");\n      } else {\n        // When outlineID is not -1, set it to -1 and colorToUse to red\n        setOutlineID(\"\");\n        setColorToUse(\"red\");\n      }\n          // Toggle selection or set new subfolder\n      if (selectedSubfolder === subfolderName) {\n        setSelectedSubfolder(null);  // Reset if the same subfolder is clicked\n      } else {\n        setSelectedSubfolder(subfolderName);\n      }\n    };\n\n    const getColorForSubfolder = (subfolderName) => {\n      if (subfolderName === \"Connect Doordash API\") {\n        return \"#32D4CC\";  // Blue\n      } else if (subfolderName === \"Read Menu to JSON\") {\n        return \"#FFEA99\";  // Light yellow\n      } else {\n        return \"red\";  // Default to red\n      }\n    };\n\n    const [connections, setConnections] = useState([]);\n\n    const handleClosePopup = () => {\n      setShowPopup(false);\n    };\n    const [arrows, setArrows] = useState([]);\n    const addArrow = ({ start, end }) => {\n      setArrows([...arrows, { start, end }]);\n    };\n\n    return (\n      <div className=\"folder-item\" style={{ top }}>\n        <div\n          className=\"folder-toggle\"\n          onClick={() => onToggleFolder(folder.name)}\n          // {...getToggleProps()}\n        >\n          <span\n            className={`material-symbols-outlined ${\n              isExpanded ? \"folder-open\" : \"folder\"\n            }`}\n          >\n            chevron_right\n          </span>\n          <span className=\"folder-name\">{folder.name}</span>\n        </div>\n        {folder.children && isExpanded && (\n          <ul className=\"subfolders\" {...getCollapseProps()}>\n            {folder.children.map((subfolder) => (\n              <li key={subfolder.name} className=\"subfolder-item\">\n              <div class=\"subfolder-box\">\n              <div class=\"subfolder-text\" \n              onClick={(e) => handleSubfolderClick(e, subfolder.name)}\n              style={{\n                color: subfolder.name === selectedSubfolder ? getColorForSubfolder(subfolder.name) : 'initial'\n              }}>\n                {subfolder.name}\n              </div>\n              <Box\n                addArrow={addArrow}\n                handler=\"right\"\n                boxId={subfolder.name}\n              />\n              </div>\n              {arrows.map(ar => (\n              <Xarrow\n                start={ar.start}\n                end={ar.end}\n                key={ar.start + \"-.\" + ar.end}\n              />\n              ))}\n              </li>\n            ))}\n          </ul>\n        )}\n        {connections.map((conn, idx) => (\n          <Xarrow\n            key={idx}\n            start={conn.start}\n            end={conn.end}\n            startAnchor=\"auto\"\n            endAnchor=\"auto\"\n            color=\"magenta\"\n          />\n        ))}\n      </div>\n    );\n  }\n  // function DragPopup({ onClose }) {\n  //   return (\n  //     <div className=\"dragpopup\">\n  //       <div className=\"popup-header\">\n  //         <h2 className=\"popup-title\">\n  //           Link Code to Note \"Connect Doordash API\"\n  //         </h2>\n  //         <button className=\"popup-close\" onClick={onClose}>\n  //           &times;\n  //         </button>\n  //       </div>\n  //       <div className=\"popup-content\">\n  //         <label>\n  //           <input\n  //             type=\"radio\"\n  //             name=\"myRadio\"\n  //             value=\"option1\"\n  //             defaultChecked={true}\n  //           />\n  //           Link Line 7\n  //         </label>\n  //         <br></br>\n  //         <label className=\"popup-deactivated\">\n  //           <input type=\"radio\" name=\"myRadio\" value=\"option2\" />\n  //           Link get_delivery\n  //         </label>\n  //         <br></br>\n  //         <label className=\"popup-deactivated\">\n  //           <input type=\"radio\" name=\"myRadio\" value=\"option3\" />\n  //           Customize the range\n  //         </label>\n  //         <br></br>\n\n  //         <label className=\"popup-deactivated\">\n  //           From: <input name=\"from\" />\n  //         </label>\n  //         <br></br>\n  //         <label className=\"popup-deactivated\">\n  //           To: <input name=\"to\" />\n  //         </label>\n  //       </div>\n  //       <div className=\"popup-footer\">\n  //         <button className=\"popup-button cancel\">Cancel</button>\n  //         <button className=\"popup-button save\" onClick={onClose}>Save</button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  function Popup({ onClose }) {\n    const folders = [\n      {\n        name: \"Bakery Website\",\n        children: [\n          {\n            name: \"Home Page\",\n            children: [\n              { name: \"Parse info into files\" },\n              { name: \"Format and Display Pics\" },\n            ],\n          },\n          {\n            name: \"Order Online\",\n            children: [\n              { name: \"Connect Doordash API\" },\n              { name: \"Read Menu to JSON\" },\n            ],\n          },\n          {\n            name: \"Contact Us\",\n            children: [{ name: \"Format Footer\" }],\n          },\n        ],\n      },\n    ];\n\n    const renderFolder = (folder) => (\n      <div key={folder.name} className=\"folder\">\n        <span className=\"material-symbols-outlined\">menu</span>\n        <span className=\"folder-name\">{folder.name}</span>\n        {folder.children && (\n          <ul className=\"subfolders\">\n            {folder.children.map((subfolder) => (\n              <li key={subfolder.name} className=\"subfolder\">\n                <span className=\"material-symbols-outlined\">menu</span>\n                <span className=\"folder-name\">{subfolder.name}</span>\n                {subfolder.children && (\n                  <ul className=\"sub-subfolders\">\n                    {subfolder.children.map((subSubfolder) => (\n                      <li key={subSubfolder.name} className=\"sub-subfolder\">\n                        <span className=\"material-symbols-outlined\">menu</span>\n                        <span className=\"folder-name\">{subSubfolder.name}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n\n    return (\n      <div className=\"popup\">\n        <div className=\"popup-header\">\n          <h2 className=\"popup-title\">Bakery Website</h2>\n          <button className=\"popup-close\" onClick={onClose}>\n            &times;\n          </button>\n        </div>\n        <div className=\"popup-content\">\n          {folders.map((folder) => renderFolder(folder))}\n        </div>\n        <div className=\"popup-footer\">\n          <button className=\"popup-button cancel\">Cancel</button>\n          <button className=\"popup-button save\">Save</button>\n        </div>\n      </div>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}