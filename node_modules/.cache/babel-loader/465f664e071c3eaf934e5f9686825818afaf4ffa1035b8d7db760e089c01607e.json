{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createLineDecoration(specialLines) {\n  const builder = new RangeSetBuilder();\n  specialLines.forEach(({\n    line,\n    color\n  }) => {\n    builder.add(line - 1, line, EditorView.lineClass({\n      class: `line-${line}`,\n      attributes: {\n        style: `color: ${color};`\n      }\n    }));\n  });\n  return builder.finish();\n}\nconst Editor = ({\n  value,\n  specialLines\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const startState = EditorState.create({\n        doc: value,\n        extensions: [lineNumbers(), javascript(), EditorView.decorations.of(createLineDecoration(specialLines)), EditorView.theme({\n          \".cm-lineNumbers .cm-gutterElement\": {\n            color: \"#000\"\n          },\n          // Default color\n          ...specialLines.reduce((acc, {\n            line,\n            color\n          }) => ({\n            ...acc,\n            [`.cm-lineNumbers .line-${line}`]: {\n              color\n            }\n          }), {})\n        })]\n      });\n      const view = new EditorView({\n        state: startState,\n        parent: editorRef.current\n      });\n      return () => view.destroy();\n    }\n  }, [value, specialLines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","RangeSetBuilder","EditorView","lineNumbers","javascript","jsxDEV","_jsxDEV","createLineDecoration","specialLines","builder","forEach","line","color","add","lineClass","class","attributes","style","finish","Editor","value","_s","editorRef","current","startState","create","doc","extensions","decorations","of","theme","reduce","acc","view","state","parent","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\n\nfunction createLineDecoration(specialLines) {\n  const builder = new RangeSetBuilder();\n  specialLines.forEach(({ line, color }) => {\n    builder.add(line - 1, line, EditorView.lineClass({\n      class: `line-${line}`,\n      attributes: {style: `color: ${color};`}\n    }));\n  });\n  return builder.finish();\n}\n\nconst Editor = ({ value, specialLines }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      const startState = EditorState.create({\n        doc: value,\n        extensions: [\n          lineNumbers(),\n          javascript(),\n          EditorView.decorations.of(createLineDecoration(specialLines)),\n          EditorView.theme({\n            \".cm-lineNumbers .cm-gutterElement\": { color: \"#000\" }, // Default color\n            ...specialLines.reduce((acc, { line, color }) => ({\n              ...acc,\n              [`.cm-lineNumbers .line-${line}`]: { color },\n            }), {}),\n          }),\n        ],\n      });\n\n      const view = new EditorView({\n        state: startState,\n        parent: editorRef.current,\n      });\n\n      return () => view.destroy();\n    }\n  }, [value, specialLines]);\n\n  return <div ref={editorRef} />;\n};\n\nexport default Editor;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,eAAe,QAAQ,mBAAmB;AAChE,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAC1D,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,oBAAoBA,CAACC,YAAY,EAAE;EAC1C,MAAMC,OAAO,GAAG,IAAIR,eAAe,CAAC,CAAC;EACrCO,YAAY,CAACE,OAAO,CAAC,CAAC;IAAEC,IAAI;IAAEC;EAAM,CAAC,KAAK;IACxCH,OAAO,CAACI,GAAG,CAACF,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAET,UAAU,CAACY,SAAS,CAAC;MAC/CC,KAAK,EAAG,QAAOJ,IAAK,EAAC;MACrBK,UAAU,EAAE;QAACC,KAAK,EAAG,UAASL,KAAM;MAAE;IACxC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;EACF,OAAOH,OAAO,CAACS,MAAM,CAAC,CAAC;AACzB;AAEA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEZ;AAAa,CAAC,KAAK;EAAAa,EAAA;EAC1C,MAAMC,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIwB,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,UAAU,GAAGxB,WAAW,CAACyB,MAAM,CAAC;QACpCC,GAAG,EAAEN,KAAK;QACVO,UAAU,EAAE,CACVxB,WAAW,CAAC,CAAC,EACbC,UAAU,CAAC,CAAC,EACZF,UAAU,CAAC0B,WAAW,CAACC,EAAE,CAACtB,oBAAoB,CAACC,YAAY,CAAC,CAAC,EAC7DN,UAAU,CAAC4B,KAAK,CAAC;UACf,mCAAmC,EAAE;YAAElB,KAAK,EAAE;UAAO,CAAC;UAAE;UACxD,GAAGJ,YAAY,CAACuB,MAAM,CAAC,CAACC,GAAG,EAAE;YAAErB,IAAI;YAAEC;UAAM,CAAC,MAAM;YAChD,GAAGoB,GAAG;YACN,CAAE,yBAAwBrB,IAAK,EAAC,GAAG;cAAEC;YAAM;UAC7C,CAAC,CAAC,EAAE,CAAC,CAAC;QACR,CAAC,CAAC;MAEN,CAAC,CAAC;MAEF,MAAMqB,IAAI,GAAG,IAAI/B,UAAU,CAAC;QAC1BgC,KAAK,EAAEV,UAAU;QACjBW,MAAM,EAAEb,SAAS,CAACC;MACpB,CAAC,CAAC;MAEF,OAAO,MAAMU,IAAI,CAACG,OAAO,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,CAAChB,KAAK,EAAEZ,YAAY,CAAC,CAAC;EAEzB,oBAAOF,OAAA;IAAK+B,GAAG,EAAEf;EAAU;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChC,CAAC;AAACpB,EAAA,CA/BIF,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}