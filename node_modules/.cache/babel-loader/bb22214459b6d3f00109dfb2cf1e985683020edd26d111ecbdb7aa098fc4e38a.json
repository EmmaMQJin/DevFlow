{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\n// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, lineNumbers, gutters, Decoration } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport \"@codemirror/view\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createLineMarkerDecorations = specialLines => {\n  const builder = new RangeSetBuilder();\n  specialLines.forEach(({\n    line,\n    className\n  }) => {\n    const deco = Decoration.line({\n      attributes: {\n        class: className\n      }\n    });\n    // Assuming line numbers are 1-based, and adjusting for CodeMirror's 0-based index.\n    builder.add(line - 1, line - 1, deco);\n  });\n  return builder.finish();\n};\nconst Editor = ({\n  value,\n  specialLines\n}) => {\n  _s();\n  const editorParentRef = useRef(null);\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), lineNumbers(), gutters(), EditorView.decorations.of(createLineMarkerDecorations(specialLines))]\n    });\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current\n    });\n    return () => {\n      view.destroy();\n    };\n  }, [value, specialLines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorParentRef,\n    style: {\n      height: '400px',\n      border: '1px solid #ddd'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"3VSnVeRbSyLoDWyoLSw9+RxgoHw=\");\n_c = Editor;\nexport default Editor;\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","RangeSetBuilder","EditorView","lineNumbers","gutters","Decoration","javascript","jsxDEV","_jsxDEV","createLineMarkerDecorations","specialLines","builder","forEach","line","className","deco","attributes","class","add","finish","Editor","value","_s","editorParentRef","current","startState","create","doc","extensions","decorations","of","view","state","parent","destroy","ref","style","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, lineNumbers, gutters, Decoration } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport {  } from \"@codemirror/view\";\n\nconst createLineMarkerDecorations = (specialLines) => {\n  const builder = new RangeSetBuilder();\n  specialLines.forEach(({line, className}) => {\n    const deco = Decoration.line({attributes: {class: className}});\n    // Assuming line numbers are 1-based, and adjusting for CodeMirror's 0-based index.\n    builder.add(line - 1, line - 1, deco);\n  });\n  return builder.finish();\n};\n\nconst Editor = ({ value, specialLines }) => {\n  const editorParentRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        lineNumbers(),\n        gutters(),\n        EditorView.decorations.of(createLineMarkerDecorations(specialLines)),\n      ],\n    });\n\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current,\n    });\n\n    return () => {\n      view.destroy();\n    };\n  }, [value, specialLines]);\n\n  return <div ref={editorParentRef} style={{ height: '400px', border: '1px solid #ddd' }} />;\n};\n\nexport default Editor;\n\n\n\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,eAAe,QAAQ,mBAAmB;AAChE,SAASC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AAC/E,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAiB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,2BAA2B,GAAIC,YAAY,IAAK;EACpD,MAAMC,OAAO,GAAG,IAAIV,eAAe,CAAC,CAAC;EACrCS,YAAY,CAACE,OAAO,CAAC,CAAC;IAACC,IAAI;IAAEC;EAAS,CAAC,KAAK;IAC1C,MAAMC,IAAI,GAAGV,UAAU,CAACQ,IAAI,CAAC;MAACG,UAAU,EAAE;QAACC,KAAK,EAAEH;MAAS;IAAC,CAAC,CAAC;IAC9D;IACAH,OAAO,CAACO,GAAG,CAACL,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,EAAEE,IAAI,CAAC;EACvC,CAAC,CAAC;EACF,OAAOJ,OAAO,CAACQ,MAAM,CAAC,CAAC;AACzB,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEX;AAAa,CAAC,KAAK;EAAAY,EAAA;EAC1C,MAAMC,eAAe,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,eAAe,CAACC,OAAO,EAAE;IAE9B,MAAMC,UAAU,GAAGzB,WAAW,CAAC0B,MAAM,CAAC;MACpCC,GAAG,EAAEN,KAAK;MACVO,UAAU,EAAE,CACVtB,UAAU,CAAC,CAAC,EACZH,WAAW,CAAC,CAAC,EACbC,OAAO,CAAC,CAAC,EACTF,UAAU,CAAC2B,WAAW,CAACC,EAAE,CAACrB,2BAA2B,CAACC,YAAY,CAAC,CAAC;IAExE,CAAC,CAAC;IAEF,MAAMqB,IAAI,GAAG,IAAI7B,UAAU,CAAC;MAC1B8B,KAAK,EAAEP,UAAU;MACjBQ,MAAM,EAAEV,eAAe,CAACC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXO,IAAI,CAACG,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACb,KAAK,EAAEX,YAAY,CAAC,CAAC;EAEzB,oBAAOF,OAAA;IAAK2B,GAAG,EAAEZ,eAAgB;IAACa,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAiB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5F,CAAC;AAACpB,EAAA,CA3BIF,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA6BZ,eAAeA,MAAM;;AAKrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}