{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  value,\n  onChange,\n  specialLines\n}) => {\n  _s();\n  const editorRef = useRef();\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    // Initialize custom gutter markers based on specialLines\n    const customLineNumbers = EditorView.decorations.from(specialLines.map(({\n      line,\n      color\n    }) => {\n      // For each special line, create a decoration that sets the color\n      const widget = document.createElement('div');\n      widget.textContent = line.toString();\n      widget.style.color = color;\n      return {\n        line,\n        widget\n      };\n    }));\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), lineNumbers(), gutter({\n        class: \"my-custom-gutter\",\n        markers: () => customLineNumbers,\n        lineMarker: (view, line) => {\n          const specialLine = specialLines.find(l => l.line === line);\n          return specialLine ? new GutterMarker(specialLine.widget) : null;\n        }\n      })]\n    });\n    const view = new EditorView({\n      state: startState,\n      parent: editorRef.current\n    });\n    return () => view.destroy();\n  }, [value, specialLines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","EditorView","gutter","lineNumbers","javascript","jsxDEV","_jsxDEV","Editor","value","onChange","specialLines","_s","editorRef","current","customLineNumbers","decorations","from","map","line","color","widget","document","createElement","textContent","toString","style","startState","create","doc","extensions","class","markers","lineMarker","view","specialLine","find","l","GutterMarker","state","parent","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\n\nconst Editor = ({ value, onChange, specialLines }) => {\n  const editorRef = useRef();\n\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    // Initialize custom gutter markers based on specialLines\n    const customLineNumbers = EditorView.decorations.from(specialLines.map(({ line, color }) => {\n      // For each special line, create a decoration that sets the color\n      const widget = document.createElement('div');\n      widget.textContent = line.toString();\n      widget.style.color = color;\n      return { line, widget };\n    }));\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        lineNumbers(),\n        gutter({\n          class: \"my-custom-gutter\",\n          markers: () => customLineNumbers,\n          lineMarker: (view, line) => {\n            const specialLine = specialLines.find(l => l.line === line);\n            return specialLine ? new GutterMarker(specialLine.widget) : null;\n          }\n        }),\n      ],\n    });\n\n    const view = new EditorView({\n      state: startState,\n      parent: editorRef.current,\n    });\n\n    return () => view.destroy();\n  }, [value, specialLines]);\n\n  return <div ref={editorRef} />;\n};\n\nexport default Editor;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAClE,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,SAAS,GAAGb,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,SAAS,CAACC,OAAO,EAAE;;IAExB;IACA,MAAMC,iBAAiB,GAAGb,UAAU,CAACc,WAAW,CAACC,IAAI,CAACN,YAAY,CAACO,GAAG,CAAC,CAAC;MAAEC,IAAI;MAAEC;IAAM,CAAC,KAAK;MAC1F;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC5CF,MAAM,CAACG,WAAW,GAAGL,IAAI,CAACM,QAAQ,CAAC,CAAC;MACpCJ,MAAM,CAACK,KAAK,CAACN,KAAK,GAAGA,KAAK;MAC1B,OAAO;QAAED,IAAI;QAAEE;MAAO,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,MAAMM,UAAU,GAAG1B,WAAW,CAAC2B,MAAM,CAAC;MACpCC,GAAG,EAAEpB,KAAK;MACVqB,UAAU,EAAE,CACVzB,UAAU,CAAC,CAAC,EACZD,WAAW,CAAC,CAAC,EACbD,MAAM,CAAC;QACL4B,KAAK,EAAE,kBAAkB;QACzBC,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB;QAChCkB,UAAU,EAAEA,CAACC,IAAI,EAAEf,IAAI,KAAK;UAC1B,MAAMgB,WAAW,GAAGxB,YAAY,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClB,IAAI,KAAKA,IAAI,CAAC;UAC3D,OAAOgB,WAAW,GAAG,IAAIG,YAAY,CAACH,WAAW,CAACd,MAAM,CAAC,GAAG,IAAI;QAClE;MACF,CAAC,CAAC;IAEN,CAAC,CAAC;IAEF,MAAMa,IAAI,GAAG,IAAIhC,UAAU,CAAC;MAC1BqC,KAAK,EAAEZ,UAAU;MACjBa,MAAM,EAAE3B,SAAS,CAACC;IACpB,CAAC,CAAC;IAEF,OAAO,MAAMoB,IAAI,CAACO,OAAO,CAAC,CAAC;EAC7B,CAAC,EAAE,CAAChC,KAAK,EAAEE,YAAY,CAAC,CAAC;EAEzB,oBAAOJ,OAAA;IAAKmC,GAAG,EAAE7B;EAAU;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChC,CAAC;AAAClC,EAAA,CAxCIJ,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}