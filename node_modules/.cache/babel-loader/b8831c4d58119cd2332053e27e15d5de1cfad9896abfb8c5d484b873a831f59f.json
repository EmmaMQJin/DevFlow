{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/box.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Xarrow from 'react-xarrows';\nimport DragPopup from './dragpopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst connectPointStyle = {\n  position: \"absolute\",\n  width: \"15px\",\n  height: \"15px\",\n  borderRadius: \"50%\",\n  // transform: \"translate(-50%, -50%)\",  // Center in the larger area\n  cursor: \"pointer\" // Indicates this is a draggable area\n};\nconst connectPointWrapperStyle = {\n  position: \"absolute\",\n  width: \"30px\",\n  // Larger touch area\n  height: \"30px\",\n  // Larger touch area\n  left: \"50%\",\n  // Centering the wrapper on the desired point\n  top: \"50%\",\n  // Centering the wrapper on the desired point\n  transform: \"translate(-50%, -50%)\",\n  // Ensuring it's centered correctly\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  zIndex: 10 // Ensures it's above other content\n};\nconst ConnectPointsWrapper = ({\n  boxId,\n  handler,\n  ref0\n}) => {\n  _s();\n  const ref1 = useRef();\n  const [position, setPosition] = React.useState({});\n  const [beingDragged, setBeingDragged] = React.useState(false);\n  const [showPopup, setShowPopup] = useState(false); // State to control popup visibility\n\n  const handleDragEnd = e => {\n    setPosition({});\n    setBeingDragged(false);\n    setShowPopup(true); // Show the popup when dragging ends\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connectPointWrapper\",\n      style: {\n        ...connectPointWrapperStyle,\n        ...position\n      },\n      draggable: true,\n      onDragStart: e => {\n        setBeingDragged(true);\n        e.dataTransfer.setData(\"arrow\", boxId);\n      },\n      onDrag: e => {\n        setPosition({\n          position: \"fixed\",\n          left: e.clientX,\n          top: e.clientY,\n          transform: \"translate(-50%, -50%)\",\n          opacity: 0\n        });\n      },\n      onDragEnd: handleDragEnd,\n      ref: ref1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectPoint\",\n        style: connectPointStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), beingDragged && /*#__PURE__*/_jsxDEV(Xarrow, {\n      start: ref0,\n      end: ref1,\n      color: \"#8D6EAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(DragPopup, {\n      onClose: () => setShowPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectPointsWrapper, \"3UFPskl2Kq1XJtKtUH78E2h6G38=\");\n_c = ConnectPointsWrapper;\nconst boxStyle = {\n  border: \"1px solid #333333\",\n  width: \"20px\",\n  height: \"20px\",\n  position: \"relative\",\n  borderRadius: \"50%\"\n  //   padding: \"20px 10px\"\n};\nexport const Box = ({\n  handler,\n  addArrow,\n  boxId\n}) => {\n  _s2();\n  const ref0 = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"circle-box\",\n    id: boxId,\n    style: boxStyle,\n    ref: ref0,\n    onDragOver: e => e.preventDefault(),\n    onDrop: e => {\n      if (e.dataTransfer.getData(\"arrow\") === boxId) {\n        console.log(e.dataTransfer.getData(\"arrow\"), boxId);\n      } else {\n        const refs = {\n          start: e.dataTransfer.getData(\"arrow\"),\n          end: boxId\n        };\n        addArrow(refs);\n        console.log(\"dropped!\", refs);\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(ConnectPointsWrapper, {\n      boxId,\n      handler,\n      ref0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(Box, \"TzpqAa42zQQ2C/ITbkO0uo8DPcM=\");\n_c2 = Box;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConnectPointsWrapper\");\n$RefreshReg$(_c2, \"Box\");","map":{"version":3,"names":["React","useState","useRef","Xarrow","DragPopup","jsxDEV","_jsxDEV","connectPointStyle","position","width","height","borderRadius","cursor","connectPointWrapperStyle","left","top","transform","display","alignItems","justifyContent","zIndex","ConnectPointsWrapper","boxId","handler","ref0","_s","ref1","setPosition","beingDragged","setBeingDragged","showPopup","setShowPopup","handleDragEnd","e","Fragment","children","className","style","draggable","onDragStart","dataTransfer","setData","onDrag","clientX","clientY","opacity","onDragEnd","ref","fileName","_jsxFileName","lineNumber","columnNumber","start","end","color","onClose","_c","boxStyle","border","Box","addArrow","_s2","class","id","onDragOver","preventDefault","onDrop","getData","console","log","refs","_c2","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/box.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Xarrow from 'react-xarrows';\nimport DragPopup from './dragpopup';\n\nconst connectPointStyle = {\n    position: \"absolute\",\n    width: \"15px\",\n    height: \"15px\",\n    borderRadius: \"50%\",\n    // transform: \"translate(-50%, -50%)\",  // Center in the larger area\n    cursor: \"pointer\"  // Indicates this is a draggable area\n  };\n\n  const connectPointWrapperStyle = {\n    position: \"absolute\",\n    width: \"30px\",  // Larger touch area\n    height: \"30px\",  // Larger touch area\n    left: \"50%\",  // Centering the wrapper on the desired point\n    top: \"50%\",  // Centering the wrapper on the desired point\n    transform: \"translate(-50%, -50%)\",  // Ensuring it's centered correctly\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    zIndex: 10  // Ensures it's above other content\n};\n\nconst ConnectPointsWrapper = ({ boxId, handler, ref0 }) => {\n  const ref1 = useRef();\n  const [position, setPosition] = React.useState({});\n  const [beingDragged, setBeingDragged] = React.useState(false);\n  const [showPopup, setShowPopup] = useState(false); // State to control popup visibility\n\n  const handleDragEnd = e => {\n    setPosition({});\n    setBeingDragged(false);\n    setShowPopup(true); // Show the popup when dragging ends\n  };\n\n  return (\n    <React.Fragment>\n        <div\n            className=\"connectPointWrapper\"\n            style={{ ...connectPointWrapperStyle, ...position }}\n            draggable\n            onDragStart={e => {\n                setBeingDragged(true);\n                e.dataTransfer.setData(\"arrow\", boxId);\n            }}\n            onDrag={e => {\n                setPosition({\n                    position: \"fixed\",\n                    left: e.clientX,\n                    top: e.clientY,\n                    transform: \"translate(-50%, -50%)\",\n                    opacity: 0\n                });\n            }}\n            onDragEnd={handleDragEnd}\n            ref={ref1}\n        >\n            <div className=\"connectPoint\" style={connectPointStyle} />\n        </div>\n        {beingDragged && <Xarrow start={ref0} end={ref1} color=\"#8D6EAC\" />}\n        {showPopup && <DragPopup onClose={() => setShowPopup(false)} />}\n    </React.Fragment>\n  );\n};\n\nconst boxStyle = {\n  border: \"1px solid #333333\",\n  width: \"20px\",\n  height: \"20px\", \n  position: \"relative\",\n  borderRadius: \"50%\", \n//   padding: \"20px 10px\"\n};\n\n\nexport const Box = ({ handler, addArrow, boxId }) => {\n  const ref0 = useRef();\n  return (\n    <div\n    class=\"circle-box\"\n      id={boxId}\n      style={boxStyle}\n      ref={ref0}\n      onDragOver={e => e.preventDefault()}\n      onDrop={e => {\n        if (e.dataTransfer.getData(\"arrow\") === boxId) {\n          console.log(e.dataTransfer.getData(\"arrow\"), boxId);\n        } else {\n          const refs = { start: e.dataTransfer.getData(\"arrow\"), end: boxId };\n          addArrow(refs);\n          console.log(\"dropped!\", refs);\n        }\n      }}\n    >\n      <ConnectPointsWrapper {...{ boxId, handler, ref0 }} />\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}