{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\n// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { SpecialLineMarker } from './linemarker'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  value,\n  specialLines\n}) => {\n  _s();\n  const editorParentRef = useRef(null);\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    // Function to create markers for special lines\n    const createMarkers = specialLines => {\n      const builder = new RangeSetBuilder();\n      specialLines.forEach(({\n        line,\n        color\n      }) => {\n        // Offset line number by 1 because CodeMirror line numbers are zero-based\n        const pos = editorView.state.doc.line(line).from;\n        // builder.add(pos, pos+1, new SpecialLineMarker(color));\n      });\n      return builder.finish();\n    };\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), lineNumbers(), gutter({\n        class: \"cm-customGutter\",\n        markers: view => createMarkers(specialLines),\n        lineMarker: (view, line) => null // Implement as needed based on specific requirements\n      })]\n    });\n    const editorView = new EditorView({\n      state: startState,\n      parent: editorParentRef.current\n    });\n    return () => {\n      editorView.destroy();\n    };\n  }, [value, specialLines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorParentRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"3VSnVeRbSyLoDWyoLSw9+RxgoHw=\");\n_c = Editor;\nexport default Editor;\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","RangeSetBuilder","EditorView","gutter","lineNumbers","javascript","SpecialLineMarker","jsxDEV","_jsxDEV","Editor","value","specialLines","_s","editorParentRef","current","createMarkers","builder","forEach","line","color","pos","editorView","state","doc","from","finish","startState","create","extensions","class","markers","view","lineMarker","parent","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState, RangeSetBuilder } from '@codemirror/state';\nimport { EditorView, gutter,  lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { SpecialLineMarker } from './linemarker'; // Adjust the import path as needed\n\nconst Editor = ({ value, specialLines }) => {\n  const editorParentRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    // Function to create markers for special lines\n    const createMarkers = (specialLines) => {\n      const builder = new RangeSetBuilder();\n      specialLines.forEach(({ line, color }) => {\n        // Offset line number by 1 because CodeMirror line numbers are zero-based\n        const pos = editorView.state.doc.line(line).from;\n        // builder.add(pos, pos+1, new SpecialLineMarker(color));\n      });\n      return builder.finish();\n    };\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        lineNumbers(),\n        gutter({\n          class: \"cm-customGutter\",\n          markers: (view) => createMarkers(specialLines),\n          lineMarker: (view, line) => null, // Implement as needed based on specific requirements\n        }),\n      ],\n    });\n\n    const editorView = new EditorView({\n      state: startState,\n      parent: editorParentRef.current,\n    });\n\n    return () => {\n      editorView.destroy();\n    };\n  }, [value, specialLines]);\n\n  return <div ref={editorParentRef} />;\n};\n\nexport default Editor;\n\n\n\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,eAAe,QAAQ,mBAAmB;AAChE,SAASC,UAAU,EAAEC,MAAM,EAAGC,WAAW,QAAQ,kBAAkB;AACnE,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,iBAAiB,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,eAAe,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,eAAe,CAACC,OAAO,EAAE;;IAE9B;IACA,MAAMC,aAAa,GAAIJ,YAAY,IAAK;MACtC,MAAMK,OAAO,GAAG,IAAIf,eAAe,CAAC,CAAC;MACrCU,YAAY,CAACM,OAAO,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAM,CAAC,KAAK;QACxC;QACA,MAAMC,GAAG,GAAGC,UAAU,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACA,IAAI,CAAC,CAACM,IAAI;QAChD;MACF,CAAC,CAAC;MACF,OAAOR,OAAO,CAACS,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,MAAMC,UAAU,GAAG1B,WAAW,CAAC2B,MAAM,CAAC;MACpCJ,GAAG,EAAEb,KAAK;MACVkB,UAAU,EAAE,CACVvB,UAAU,CAAC,CAAC,EACZD,WAAW,CAAC,CAAC,EACbD,MAAM,CAAC;QACL0B,KAAK,EAAE,iBAAiB;QACxBC,OAAO,EAAGC,IAAI,IAAKhB,aAAa,CAACJ,YAAY,CAAC;QAC9CqB,UAAU,EAAEA,CAACD,IAAI,EAAEb,IAAI,KAAK,IAAI,CAAE;MACpC,CAAC,CAAC;IAEN,CAAC,CAAC;IAEF,MAAMG,UAAU,GAAG,IAAInB,UAAU,CAAC;MAChCoB,KAAK,EAAEI,UAAU;MACjBO,MAAM,EAAEpB,eAAe,CAACC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXO,UAAU,CAACa,OAAO,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACxB,KAAK,EAAEC,YAAY,CAAC,CAAC;EAEzB,oBAAOH,OAAA;IAAK2B,GAAG,EAAEtB;EAAgB;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtC,CAAC;AAAC3B,EAAA,CAzCIH,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA2CZ,eAAeA,MAAM;;AAKrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}