{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/lines.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from \"@codemirror/state\";\nimport { EditorView } from \"@codemirror/view\";\nimport { gutter, GutterMarker } from \"@codemirror/view\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NumberMarker extends GutterMarker {\n  constructor(number) {\n    super();\n    this.number = number;\n  }\n  eq(other) {\n    return other instanceof NumberMarker && this.number === other.number;\n  }\n  toDOM() {\n    return document.createTextNode(this.number);\n  }\n}\nconst lineNumbersExtension = gutter({\n  class: \"cm-lineNumbers\",\n  lineMarker: (view, line) => new NumberMarker(line)\n});\nconst Editor = ({\n  value,\n  onChange\n}) => {\n  _s();\n  const editorParentRef = useRef(null);\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n    const updateListener = EditorView.updateListener.of(update => {\n      if (update.docChanged) {\n        const newValue = update.state.doc.toString();\n        onChange(newValue, update);\n      }\n    });\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [lineNumbersExtension, javascript(), updateListener]\n    });\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current\n    });\n    return () => {\n      view.destroy();\n    };\n  }, [onChange, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorParentRef,\n    style: {\n      height: '400px',\n      border: '1px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"3VSnVeRbSyLoDWyoLSw9+RxgoHw=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","EditorView","gutter","GutterMarker","javascript","jsxDEV","_jsxDEV","NumberMarker","constructor","number","eq","other","toDOM","document","createTextNode","lineNumbersExtension","class","lineMarker","view","line","Editor","value","onChange","_s","editorParentRef","current","updateListener","of","update","docChanged","newValue","state","doc","toString","startState","create","extensions","parent","destroy","ref","style","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/lines.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { EditorState } from \"@codemirror/state\";\nimport { EditorView } from \"@codemirror/view\";\nimport { gutter, GutterMarker } from \"@codemirror/view\";\nimport { javascript } from \"@codemirror/lang-javascript\";\n\nclass NumberMarker extends GutterMarker {\n  constructor(number) {\n    super();\n    this.number = number;\n  }\n\n  eq(other) {\n    return other instanceof NumberMarker && this.number === other.number;\n  }\n\n  toDOM() {\n    return document.createTextNode(this.number);\n  }\n}\n\nconst lineNumbersExtension = gutter({\n  class: \"cm-lineNumbers\",\n  lineMarker: (view, line) => new NumberMarker(line),\n});\n\nconst Editor = ({ value, onChange }) => {\n  const editorParentRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    const updateListener = EditorView.updateListener.of((update) => {\n      if (update.docChanged) {\n        const newValue = update.state.doc.toString();\n        onChange(newValue, update);\n      }\n    });\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [lineNumbersExtension, javascript(), updateListener],\n    });\n\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current,\n    });\n\n    return () => {\n      view.destroy();\n    };\n  }, [onChange, value]);\n\n  return <div ref={editorParentRef} style={{ height: '400px', border: '1px solid black' }} />;\n};\n\nexport default Editor;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,MAAM,EAAEC,YAAY,QAAQ,kBAAkB;AACvD,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,SAASJ,YAAY,CAAC;EACtCK,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAC,EAAEA,CAACC,KAAK,EAAE;IACR,OAAOA,KAAK,YAAYJ,YAAY,IAAI,IAAI,CAACE,MAAM,KAAKE,KAAK,CAACF,MAAM;EACtE;EAEAG,KAAKA,CAAA,EAAG;IACN,OAAOC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACL,MAAM,CAAC;EAC7C;AACF;AAEA,MAAMM,oBAAoB,GAAGb,MAAM,CAAC;EAClCc,KAAK,EAAE,gBAAgB;EACvBC,UAAU,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK,IAAIZ,YAAY,CAACY,IAAI;AACnD,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,eAAe,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAAC0B,eAAe,CAACC,OAAO,EAAE;IAE9B,MAAMC,cAAc,GAAGzB,UAAU,CAACyB,cAAc,CAACC,EAAE,CAAEC,MAAM,IAAK;MAC9D,IAAIA,MAAM,CAACC,UAAU,EAAE;QACrB,MAAMC,QAAQ,GAAGF,MAAM,CAACG,KAAK,CAACC,GAAG,CAACC,QAAQ,CAAC,CAAC;QAC5CX,QAAQ,CAACQ,QAAQ,EAAEF,MAAM,CAAC;MAC5B;IACF,CAAC,CAAC;IAEF,MAAMM,UAAU,GAAGlC,WAAW,CAACmC,MAAM,CAAC;MACpCH,GAAG,EAAEX,KAAK;MACVe,UAAU,EAAE,CAACrB,oBAAoB,EAAEX,UAAU,CAAC,CAAC,EAAEsB,cAAc;IACjE,CAAC,CAAC;IAEF,MAAMR,IAAI,GAAG,IAAIjB,UAAU,CAAC;MAC1B8B,KAAK,EAAEG,UAAU;MACjBG,MAAM,EAAEb,eAAe,CAACC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXP,IAAI,CAACoB,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAAChB,QAAQ,EAAED,KAAK,CAAC,CAAC;EAErB,oBAAOf,OAAA;IAAKiC,GAAG,EAAEf,eAAgB;IAACgB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7F,CAAC;AAACvB,EAAA,CA7BIH,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}