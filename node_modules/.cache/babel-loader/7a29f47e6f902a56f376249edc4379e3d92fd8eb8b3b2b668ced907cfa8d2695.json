{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { RangeSet, RangeSetBuilder } from '@codemirror/rangeset';\n\n// Define a GutterMarker subclass for custom styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CustomLineNumberMarker extends RangeSet.GutterMarker {\n  constructor(className) {\n    super();\n    this.className = className;\n  }\n  toDOM() {\n    const span = document.createElement('span');\n    span.className = this.className;\n    return span;\n  }\n}\n\n// Function to generate markers based on special line numbers and their styles\nfunction createLineNumberMarkers(specialLineStyles) {\n  const builder = new RangeSetBuilder();\n  specialLineStyles.forEach(({\n    line,\n    color,\n    fontSize\n  }) => {\n    const className = `custom-ln-${line}`;\n    // Dynamically add styles to the document head\n    const style = document.createElement('style');\n    document.head.appendChild(style);\n    style.sheet.insertRule(`.${className} { color: ${color}; font-size: ${fontSize}; }`, 0);\n    builder.add(line - 1, line, new CustomLineNumberMarker(className));\n  });\n  return builder.finish();\n}\nconst Editor = ({\n  value,\n  onChange,\n  specialLineStyles\n}) => {\n  _s();\n  const editorParentRef = useRef(null);\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n    const state = EditorState.create({\n      doc: value,\n      extensions: [javascript(), lineNumbers(), gutter({\n        class: \"cm-customLineNumbers\",\n        lineMarker: (view, line) => {\n          const markers = createLineNumberMarkers(specialLineStyles);\n          return markers.at(line.from);\n        }\n      })]\n    });\n    new EditorView({\n      state,\n      parent: editorParentRef.current\n    });\n  }, [value, onChange, specialLineStyles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorParentRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"3VSnVeRbSyLoDWyoLSw9+RxgoHw=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","EditorView","gutter","lineNumbers","javascript","RangeSet","RangeSetBuilder","jsxDEV","_jsxDEV","CustomLineNumberMarker","GutterMarker","constructor","className","toDOM","span","document","createElement","createLineNumberMarkers","specialLineStyles","builder","forEach","line","color","fontSize","style","head","appendChild","sheet","insertRule","add","finish","Editor","value","onChange","_s","editorParentRef","current","state","create","doc","extensions","class","lineMarker","view","markers","at","from","parent","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { RangeSet, RangeSetBuilder } from '@codemirror/rangeset';\n\n// Define a GutterMarker subclass for custom styling\nclass CustomLineNumberMarker extends RangeSet.GutterMarker {\n  constructor(className) {\n    super();\n    this.className = className;\n  }\n\n  toDOM() {\n    const span = document.createElement('span');\n    span.className = this.className;\n    return span;\n  }\n}\n\n// Function to generate markers based on special line numbers and their styles\nfunction createLineNumberMarkers(specialLineStyles) {\n  const builder = new RangeSetBuilder();\n  specialLineStyles.forEach(({ line, color, fontSize }) => {\n    const className = `custom-ln-${line}`;\n    // Dynamically add styles to the document head\n    const style = document.createElement('style');\n    document.head.appendChild(style);\n    style.sheet.insertRule(`.${className} { color: ${color}; font-size: ${fontSize}; }`, 0);\n\n    builder.add(line - 1, line, new CustomLineNumberMarker(className));\n  });\n  return builder.finish();\n}\n\nconst Editor = ({ value, onChange, specialLineStyles }) => {\n  const editorParentRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    const state = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        lineNumbers(),\n        gutter({\n          class: \"cm-customLineNumbers\",\n          lineMarker: (view, line) => {\n            const markers = createLineNumberMarkers(specialLineStyles);\n            return markers.at(line.from);\n          },\n        }),\n      ],\n    });\n\n    new EditorView({\n      state,\n      parent: editorParentRef.current,\n    });\n\n  }, [value, onChange, specialLineStyles]);\n\n  return <div ref={editorParentRef} />;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAClE,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,QAAQ,EAAEC,eAAe,QAAQ,sBAAsB;;AAEhE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,sBAAsB,SAASJ,QAAQ,CAACK,YAAY,CAAC;EACzDC,WAAWA,CAACC,SAAS,EAAE;IACrB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EAEAC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3CF,IAAI,CAACF,SAAS,GAAG,IAAI,CAACA,SAAS;IAC/B,OAAOE,IAAI;EACb;AACF;;AAEA;AACA,SAASG,uBAAuBA,CAACC,iBAAiB,EAAE;EAClD,MAAMC,OAAO,GAAG,IAAIb,eAAe,CAAC,CAAC;EACrCY,iBAAiB,CAACE,OAAO,CAAC,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,KAAK;IACvD,MAAMX,SAAS,GAAI,aAAYS,IAAK,EAAC;IACrC;IACA,MAAMG,KAAK,GAAGT,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC7CD,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACF,KAAK,CAAC;IAChCA,KAAK,CAACG,KAAK,CAACC,UAAU,CAAE,IAAGhB,SAAU,aAAYU,KAAM,gBAAeC,QAAS,KAAI,EAAE,CAAC,CAAC;IAEvFJ,OAAO,CAACU,GAAG,CAACR,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAE,IAAIZ,sBAAsB,CAACG,SAAS,CAAC,CAAC;EACpE,CAAC,CAAC;EACF,OAAOO,OAAO,CAACW,MAAM,CAAC,CAAC;AACzB;AAEA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEf;AAAkB,CAAC,KAAK;EAAAgB,EAAA;EACzD,MAAMC,eAAe,GAAGpC,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACqC,eAAe,CAACC,OAAO,EAAE;IAE9B,MAAMC,KAAK,GAAGrC,WAAW,CAACsC,MAAM,CAAC;MAC/BC,GAAG,EAAEP,KAAK;MACVQ,UAAU,EAAE,CACVpC,UAAU,CAAC,CAAC,EACZD,WAAW,CAAC,CAAC,EACbD,MAAM,CAAC;QACLuC,KAAK,EAAE,sBAAsB;QAC7BC,UAAU,EAAEA,CAACC,IAAI,EAAEtB,IAAI,KAAK;UAC1B,MAAMuB,OAAO,GAAG3B,uBAAuB,CAACC,iBAAiB,CAAC;UAC1D,OAAO0B,OAAO,CAACC,EAAE,CAACxB,IAAI,CAACyB,IAAI,CAAC;QAC9B;MACF,CAAC,CAAC;IAEN,CAAC,CAAC;IAEF,IAAI7C,UAAU,CAAC;MACboC,KAAK;MACLU,MAAM,EAAEZ,eAAe,CAACC;IAC1B,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACJ,KAAK,EAAEC,QAAQ,EAAEf,iBAAiB,CAAC,CAAC;EAExC,oBAAOV,OAAA;IAAKwC,GAAG,EAAEb;EAAgB;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtC,CAAC;AAAClB,EAAA,CA7BIH,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}