{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  value,\n  specialLines\n}) => {\n  _s();\n  const editorParentRef = useRef(null);\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n    const specialLineMarkers = specialLines.map(({\n      line,\n      color\n    }) => EditorView.lineMarker({\n      line,\n      marker: new SpecialLineMarker({\n        color\n      })\n    }));\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), gutter({\n        class: \"cm-customLineNumbers\",\n        markers: () => RangeSetBuilder.from(specialLineMarkers)\n      }), lineNumbers()]\n    });\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current\n    });\n    return () => {\n      view.destroy();\n    };\n  }, [value, specialLines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorParentRef,\n    style: {\n      height: '400px',\n      border: '1px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"3VSnVeRbSyLoDWyoLSw9+RxgoHw=\");\n_c = Editor;\nexport default Editor;\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","EditorView","gutter","lineNumbers","javascript","jsxDEV","_jsxDEV","Editor","value","specialLines","_s","editorParentRef","current","specialLineMarkers","map","line","color","lineMarker","marker","SpecialLineMarker","startState","create","doc","extensions","class","markers","RangeSetBuilder","from","view","state","parent","destroy","ref","style","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, gutter, lineNumbers } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\n\nconst Editor = ({ value, specialLines }) => {\n  const editorParentRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    const specialLineMarkers = specialLines.map(({ line, color }) =>\n      EditorView.lineMarker({\n        line,\n        marker: new SpecialLineMarker({color})\n      })\n    );\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        gutter({\n          class: \"cm-customLineNumbers\",\n          markers: () => RangeSetBuilder.from(specialLineMarkers),\n        }),\n        lineNumbers(),\n      ],\n    });\n\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current,\n    });\n\n    return () => {\n      view.destroy();\n    };\n  }, [value, specialLines]);\n\n  return <div ref={editorParentRef} style={{ height: '400px', border: '1px solid black' }} />;\n};\n\nexport default Editor;\n\n\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAClE,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,eAAe,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,eAAe,CAACC,OAAO,EAAE;IAE9B,MAAMC,kBAAkB,GAAGJ,YAAY,CAACK,GAAG,CAAC,CAAC;MAAEC,IAAI;MAAEC;IAAM,CAAC,KAC1Df,UAAU,CAACgB,UAAU,CAAC;MACpBF,IAAI;MACJG,MAAM,EAAE,IAAIC,iBAAiB,CAAC;QAACH;MAAK,CAAC;IACvC,CAAC,CACH,CAAC;IAED,MAAMI,UAAU,GAAGpB,WAAW,CAACqB,MAAM,CAAC;MACpCC,GAAG,EAAEd,KAAK;MACVe,UAAU,EAAE,CACVnB,UAAU,CAAC,CAAC,EACZF,MAAM,CAAC;QACLsB,KAAK,EAAE,sBAAsB;QAC7BC,OAAO,EAAEA,CAAA,KAAMC,eAAe,CAACC,IAAI,CAACd,kBAAkB;MACxD,CAAC,CAAC,EACFV,WAAW,CAAC,CAAC;IAEjB,CAAC,CAAC;IAEF,MAAMyB,IAAI,GAAG,IAAI3B,UAAU,CAAC;MAC1B4B,KAAK,EAAET,UAAU;MACjBU,MAAM,EAAEnB,eAAe,CAACC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXgB,IAAI,CAACG,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACvB,KAAK,EAAEC,YAAY,CAAC,CAAC;EAEzB,oBAAOH,OAAA;IAAK0B,GAAG,EAAErB,eAAgB;IAACsB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7F,CAAC;AAAC7B,EAAA,CApCIH,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAsCZ,eAAeA,MAAM;;AAIrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}