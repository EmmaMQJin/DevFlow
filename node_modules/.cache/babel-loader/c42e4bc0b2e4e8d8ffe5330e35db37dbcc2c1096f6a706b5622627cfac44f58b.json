{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/outline.js\",\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Editor from \"./editor\";\nimport \"./outline.css\";\nimport { useCollapse } from \"react-collapsed\";\nimport Xarrow from 'react-xarrows';\nimport { Box } from \"./box\";\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Outline(props) {\n  _s5();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  const [isAIPopupOpen, setIsAIPopupOpen] = useState(false);\n  const [apiResponse, setApiResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [currentFile, setCurrentFile] = useState(null);\n  const [outlineID, setOutlineID] = useState(\"\");\n  const [colorToUse, setColorToUse] = useState(\"\");\n  const [activeButton, setActiveButton] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [editedFolders, setEditedFolders] = useState([]);\n  // Define folder structure and toggle functionality\n  const [folders, setFolders] = useState([{\n    name: \"Home Page\",\n    children: [{\n      name: \"Parse info into files\"\n    }, {\n      name: \"Format and Display Pics\"\n    }],\n    isOpen: false\n  }, {\n    name: \"Order Online\",\n    children: [{\n      name: \"Connect Doordash API\"\n    }, {\n      name: \"Read Menu to JSON\"\n    }],\n    isOpen: false\n  }, {\n    name: \"Contact Us\",\n    children: [{\n      name: \"Format Footer\"\n    }],\n    isOpen: false\n  }]);\n  const openai = new OpenAI({\n    apiKey: \"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\",\n    // Make sure to keep your API key secure\n    dangerouslyAllowBrowser: true\n  });\n  const handleSubmit = async (e, projectIdea) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      console.log(projectIdea);\n      const sysprompt = `You are a helpful outline generator for coding projects. Given a project idea from the user, you should output the outline of the project in a TODO-list like format. Each item should FEWER THAN 6 words long. Output as a list of JSON objects like this:\n      [\n          {\n            \"name\": \"Home Page\",\n            \"children\": [\n              { \"name\": \"Parse info into files\" },\n              { \"name\": \"Format and Display Pics\" }\n            ],\n            \"isOpen\": false,\n          },\n          {\n            \"name\": \"Order Online\",\n            \"children\": [\n              { \"name\": \"Connect Doordash API\" },\n              { \"name\": \"Read Menu to JSON\" }\n            ],\n            \"isOpen\": false,\n          },\n          {\n            \"name\": \"Contact Us\",\n            \"children\": [\n              { \"name\": \"Format Footer\" }\n            ],\n            \"isOpen\": false,\n          }\n        ]\n      You should generate 3 outer-layer items (\"Home Page\", \"Order Online\", and \"Contact Us\" is the above case). For the first outer-layer item, it should have 2 subitems. For the second outer-layer item, it should have 2 subitems. For the third outer-layer item, it should have 1 subitem!!! Only 1! Generate exactly as the format given.`;\n      const shot1 = `[\n        {\n          \"name\": \"Home Page\",\n          \"children\": [\n            { \"name\": \"Parse info into files\" },\n            { \"name\": \"Format and Display Pics\" }\n          ],\n          \"isOpen\": false,\n        },\n        {\n          \"name\": \"Order Online\",\n          \"children\": [\n            { \"name\": \"Connect Doordash API\" },\n            { \"name\": \"Read Menu to JSON\" }\n          ],\n          \"isOpen\": false,\n        },\n        {\n          \"name\": \"Contact Us\",\n          \"children\": [\n            { \"name\": \"Format Footer\" }\n          ],\n          \"isOpen\": false,\n        }\n      ]`;\n      const shot2 = `[\n        {\n          \"name\": \"Home Page\",\n          \"children\": [\n            { \"name\": \"Design UI Layout\" },\n            { \"name\": \"Implement Authentication System\" }\n          ],\n          \"isOpen\": false\n        },\n        {\n          \"name\": \"Task Management\",\n          \"children\": [\n            { \"name\": \"Create Task CRUD Functionality\" },\n            { \"name\": \"Add Priority and Due Date\" }\n          ],\n          \"isOpen\": false\n        },\n        {\n          \"name\": \"Settings\",\n          \"children\": [\n            { \"name\": \"Allow User Preferences\" }\n          ],\n          \"isOpen\": false\n        }\n      ]`;\n      const chatCompletion = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          \"role\": \"user\",\n          \"content\": \"bakery website\"\n        }, {\n          \"role\": \"assistant\",\n          \"content\": shot1\n        }, {\n          \"role\": \"user\",\n          \"content\": \"todo list app\"\n        }, {\n          \"role\": \"assistant\",\n          \"content\": shot2\n        }, {\n          \"role\": \"system\",\n          \"content\": sysprompt\n        }, {\n          \"role\": \"user\",\n          \"content\": projectIdea\n        }]\n      });\n      console.log(chatCompletion.choices[0].message.content);\n      const jsonObject = JSON.parse(chatCompletion.choices[0].message.content);\n      console.log(jsonObject);\n      function transformFolders(folders) {\n        return folders.map(folder => ({\n          name: folder.name,\n          children: folder.children.map(child => ({\n            name: child.name\n          })),\n          isOpen: folder.isOpen\n        }));\n      }\n      const jsobject = transformFolders(jsonObject);\n      console.log(typeof jsobject);\n      // setApiResponse(jsobject);\n      setFolders(jsobject);\n      // call popup\n      handleEditOutlineClick();\n    } catch (e) {\n      console.error(e);\n      setApiResponse(\"Something is going wrong, Please try again.\");\n    }\n    setLoading(false);\n  };\n  const handleGenerateOutlineClick = () => {\n    setIsAIPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    setIsAIPopupOpen(false);\n  };\n  const handleSubmitForm = (e, projectIdea) => {\n    e.preventDefault();\n    handleSubmit(e, projectIdea);\n    handleClosePopup();\n  };\n  const AiPopup = ({\n    isOpen,\n    onClose,\n    onSubmit\n  }) => {\n    _s();\n    const [projectIdea, setProjectIdea] = useState('');\n    const handleInputChange = e => {\n      setProjectIdea(e.target.value);\n    };\n    if (!isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      style: {\n        height: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What project do you want to build?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmitForm(e, projectIdea),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: projectIdea,\n          onChange: handleInputChange,\n          placeholder: \"Enter your project idea\",\n          style: {\n            width: '95%',\n            padding: '10px',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-button save\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"popup-button save\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  };\n  _s(AiPopup, \"YJpcjlgTXsknZ3mjWWnlwDn5A1s=\");\n  const extractChildrenNames = folders => {\n    return folders.flatMap(folder => folder.children.map(child => child.name));\n  };\n  const subfolderList = extractChildrenNames(folders);\n  const toggleFolder = folderName => {\n    setFolders(prevFolders => prevFolders.map(folder => folder.name === folderName ? {\n      ...folder,\n      isOpen: !folder.isOpen\n    } : folder));\n  };\n\n  // Fetch files when the component mounts\n  useEffect(() => {\n    async function fetchFiles() {\n      try {\n        const responses = await Promise.all([fetch('/example-code/apis.py'), fetch('/example-code/parse.py'), fetch('/example-code/format.py')]);\n        if (responses.every(response => response.ok)) {\n          const [apiText, parseText, setupText] = await Promise.all(responses.map(response => response.text()));\n          console.log(apiText);\n          const newFiles = [{\n            name: \"apis.py\",\n            content: apiText,\n            linesToColor: {\n              \"\": [],\n              \"Parse info into files\": [],\n              \"Format and Display Pics\": [],\n              \"Connect Doordash API\": [15, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114],\n              \"Read Menu to JSON\": [19, 20, 21, 22, 23, 17, 18],\n              \"Format Footer\": []\n            }\n          }, {\n            name: \"parse.py\",\n            content: parseText,\n            linesToColor: {\n              \"\": [],\n              \"Parse info into files\": [],\n              \"Format and Display Pics\": [],\n              \"Connect Doordash API\": [],\n              \"Read Menu to JSON\": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38],\n              \"Format Footer\": []\n            }\n          }, {\n            name: \"format.py\",\n            content: setupText,\n            linesToColor: {\n              \"\": [],\n              \"Parse info into files\": [],\n              \"Format and Display Pics\": [],\n              \"Connect Doordash API\": [],\n              \"Read Menu to JSON\": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n              \"Format Footer\": []\n            }\n          }];\n          setFiles(newFiles);\n          setCurrentFile(newFiles[0]);\n        } else {\n          throw new Error('Failed to fetch one or more files');\n        }\n      } catch (error) {\n        console.error(\"Error fetching files:\", error);\n      }\n    }\n    fetchFiles();\n  }, []);\n  const handleContentChange = useCallback(({\n    name,\n    content,\n    linesToColor\n  }) => {\n    if (currentFile) {\n      const updatedFiles = files.map(file => {\n        if (file.name === currentFile.name) {\n          console.log(\"Updating file:\", file.name);\n          return {\n            ...file,\n            content,\n            ...(linesToColor && {\n              linesToColor\n            })\n          };\n        }\n        return file;\n      });\n      setFiles(updatedFiles);\n      setCurrentFile(prev => ({\n        ...prev,\n        content,\n        ...(linesToColor && {\n          linesToColor\n        })\n      }));\n    }\n  }, [currentFile, files]);\n  const handleButtonClick = buttonName => {\n    setActiveButton(buttonName);\n  };\n  const handleEditOutlineClick = () => {\n    setShowPopup(true);\n    setEditedFolders([...folders]);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  if (!currentFile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading files...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 28\n  }, this);\n\n  // Main App\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vscode-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"vscode-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"editor-title\",\n            children: [\"Outline\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined help\",\n              children: \"help\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FolderStructure, {\n            folders: folders,\n            onToggleFolder: toggleFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-outline-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button edit-outline\",\n            onClick: handleEditOutlineClick,\n            children: \"Edit Outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button edit-outline\",\n            onClick: handleGenerateOutlineClick,\n            children: \"Generate New Outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"terminal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-window\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-selector\",\n            children: files.map(file => {\n              const is_highlighted = file.linesToColor[outlineID].length !== 0;\n              const is_hidden = outlineID !== \"Read Menu to JSON\" && file.name === \"format.py\";\n              const buttonStyle = is_highlighted ? {\n                borderBottom: `8px solid ${colorToUse}`\n              } : {};\n              const buttonClass = is_hidden ? \"filename-button-hidden\" : \"filename-button\";\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                className: buttonClass,\n                onClick: () => setCurrentFile(file),\n                children: file.name\n              }, file.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            linesToColor: currentFile.linesToColor[outlineID],\n            colorToUse: colorToUse,\n            currentFile: currentFile,\n            onContentChange: handleContentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      onClose: handlePopupClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }, this), isAIPopupOpen && /*#__PURE__*/_jsxDEV(AiPopup, {\n      isOpen: isAIPopupOpen,\n      onClose: handleClosePopup,\n      onSubmit: handleSubmitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n  function FolderStructure({\n    folders,\n    onToggleFolder\n  }) {\n    _s2();\n    const [totalHeight, setTotalHeight] = useState(0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-structure\",\n      children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(FolderItem, {\n        folder: folder,\n        index: index,\n        totalHeight: totalHeight,\n        setTotalHeight: setTotalHeight,\n        onToggleFolder: onToggleFolder,\n        setOutlineID: setOutlineID // Pass setOutlineID as a prop\n        ,\n        setColorToUse: setColorToUse // Pass setColorToUse as a prop\n      }, folder.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  }\n  _s2(FolderStructure, \"Tkjh7eE4zD5uly5eOXxLIFsQmhg=\");\n  function FolderItem({\n    folder,\n    index,\n    totalHeight,\n    setTotalHeight,\n    onToggleFolder,\n    setOutlineID,\n    setColorToUse\n  }) {\n    _s3();\n    const {\n      getCollapseProps,\n      getToggleProps,\n      isExpanded\n    } = useCollapse({\n      defaultExpanded: folder.isOpen\n    });\n    const folderHeight = isExpanded ? 30 + folder.children.length * 20 : 30;\n    const top = index === 0 ? 0 : totalHeight;\n    const handleSubfolderClick = (e, subfolderName) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (outlineID === subfolderName) {\n        setOutlineID(\"\");\n      } else {\n        setOutlineID(subfolderName);\n      }\n      console.log(subfolderName);\n      if (subfolderName === subfolderList[0]) {\n        setColorToUse(\"#32D4CC\");\n      } else if (subfolderName === subfolderList[1]) {\n        setColorToUse(\"#FFEA99\");\n      } else if (subfolderName === subfolderList[2]) {\n        setColorToUse(\"#7F83D3\");\n      } else if (subfolderName === subfolderList[3]) {\n        setColorToUse(\"#D47F9D\");\n      } else if (subfolderName === subfolderList[4]) {\n        setColorToUse(\"#7FADD3\");\n      } else {\n        setColorToUse(\"red\");\n      }\n    };\n    const [connections, setConnections] = useState([]);\n    const handleClosePopup = () => {\n      setShowPopup(false);\n    };\n    const [arrows, setArrows] = useState([]);\n    const addArrow = ({\n      start,\n      end\n    }) => {\n      setArrows([...arrows, {\n        start,\n        end\n      }]);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-item\",\n      style: {\n        top\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-toggle\",\n        onClick: () => onToggleFolder(folder.name)\n        // {...getToggleProps()}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `material-symbols-outlined ${isExpanded ? \"folder-open\" : \"folder\"}`,\n          children: \"chevron_right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"folder-name\",\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), folder.children && isExpanded && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subfolders\",\n        ...getCollapseProps(),\n        children: folder.children.map(subfolder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"subfolder-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subfolder-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subfolder-text\",\n              onClick: e => handleSubfolderClick(e, subfolder.name),\n              style: {\n                color: subfolder.name === outlineID ? colorToUse : 'white',\n                fontWeight: subfolder.name === outlineID ? \"bold\" : \"normal\"\n              },\n              children: subfolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              addArrow: addArrow,\n              handler: \"right\",\n              boxId: subfolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), arrows.map(ar => /*#__PURE__*/_jsxDEV(Xarrow, {\n            start: ar.start,\n            end: ar.end\n          }, ar.start + \"-.\" + ar.end, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this))]\n        }, subfolder.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), connections.map((conn, idx) => /*#__PURE__*/_jsxDEV(Xarrow, {\n        start: conn.start,\n        end: conn.end,\n        startAnchor: \"auto\",\n        endAnchor: \"auto\",\n        color: \"magenta\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this);\n  }\n  _s3(FolderItem, \"H/5Huuikr7cY/PdSroGrwK13k0Q=\", false, function () {\n    return [useCollapse];\n  });\n  function Popup({\n    onClose\n  }) {\n    _s4();\n    const [editedFolders, setEditedFolders] = useState([...folders]);\n    const handleFolderNameChange = (e, folderIndex) => {\n      const newFolders = editedFolders.map((folder, index) => {\n        if (index === folderIndex) {\n          return {\n            ...folder,\n            name: e.target.value\n          };\n        }\n        return folder;\n      });\n      setEditedFolders(newFolders);\n    };\n    const handleSubfolderNameChange = (e, folderIndex, subfolderIndex) => {\n      const newFolders = editedFolders.map((folder, index) => {\n        if (index === folderIndex) {\n          const newChildren = folder.children.map((subfolder, subIndex) => {\n            if (subIndex === subfolderIndex) {\n              return {\n                ...subfolder,\n                name: e.target.value\n              };\n            }\n            return subfolder;\n          });\n          return {\n            ...folder,\n            children: newChildren\n          };\n        }\n        return folder;\n      });\n      setEditedFolders(newFolders);\n    };\n    const renderFolder = (folder, folderIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-folder\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: folder.name,\n        onChange: e => handleFolderNameChange(e, folderIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), folder.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"popup-subfolders\",\n        children: folder.children.map((subfolder, subfolderIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"popup-subfolder\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: subfolder.name,\n            onChange: e => handleSubfolderNameChange(e, folderIndex, subfolderIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 17\n          }, this)\n        }, subfolderIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 11\n      }, this)]\n    }, folderIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup-title\",\n          children: \"Bakery Website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-close\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: editedFolders.map((folder, folderIndex) => renderFolder(folder, folderIndex))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-button cancel\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-button save\",\n          onClick: () => {\n            onClose();\n            setFolders(editedFolders);\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this);\n  }\n  _s4(Popup, \"U1twg9nE1lscc98VMEIHDZ55xxM=\");\n}\n_s5(Outline, \"4t7tr09dXfs+StuSWbZO7TJOAZ0=\");\n_c = Outline;\nvar _c;\n$RefreshReg$(_c, \"Outline\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Editor","useCollapse","Xarrow","Box","OpenAI","jsxDEV","_jsxDEV","Outline","props","_s5","_s","$RefreshSig$","_s2","_s3","_s4","isAIPopupOpen","setIsAIPopupOpen","apiResponse","setApiResponse","loading","setLoading","files","setFiles","currentFile","setCurrentFile","outlineID","setOutlineID","colorToUse","setColorToUse","activeButton","setActiveButton","showPopup","setShowPopup","editedFolders","setEditedFolders","folders","setFolders","name","children","isOpen","openai","apiKey","dangerouslyAllowBrowser","handleSubmit","e","projectIdea","preventDefault","console","log","sysprompt","shot1","shot2","chatCompletion","chat","completions","create","model","messages","choices","message","content","jsonObject","JSON","parse","transformFolders","map","folder","child","jsobject","handleEditOutlineClick","error","handleGenerateOutlineClick","handleClosePopup","handleSubmitForm","AiPopup","onClose","onSubmit","setProjectIdea","handleInputChange","target","value","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","width","padding","marginBottom","onClick","extractChildrenNames","flatMap","subfolderList","toggleFolder","folderName","prevFolders","fetchFiles","responses","Promise","all","fetch","every","response","ok","apiText","parseText","setupText","text","newFiles","linesToColor","Error","handleContentChange","updatedFiles","file","prev","handleButtonClick","buttonName","handlePopupClose","FolderStructure","onToggleFolder","is_highlighted","length","is_hidden","buttonStyle","borderBottom","buttonClass","onContentChange","Popup","totalHeight","setTotalHeight","index","FolderItem","getCollapseProps","getToggleProps","isExpanded","defaultExpanded","folderHeight","top","handleSubfolderClick","subfolderName","stopPropagation","connections","setConnections","arrows","setArrows","addArrow","start","end","subfolder","color","fontWeight","handler","boxId","ar","conn","idx","startAnchor","endAnchor","handleFolderNameChange","folderIndex","newFolders","handleSubfolderNameChange","subfolderIndex","newChildren","subIndex","renderFolder","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/outline.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Editor from \"./editor\";\nimport \"./outline.css\";\nimport { useCollapse } from \"react-collapsed\";\nimport Xarrow from 'react-xarrows';\nimport { Box } from \"./box\";\nimport OpenAI from 'openai';\n\n\nexport function Outline(props) {\n\n  const [isAIPopupOpen, setIsAIPopupOpen] = useState(false);\n  const [apiResponse, setApiResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n\n  const [files, setFiles] = useState([]);\n  const [currentFile, setCurrentFile] = useState(null);\n  const [outlineID, setOutlineID] = useState(\"\");\n  const [colorToUse, setColorToUse] = useState(\"\");\n  const [activeButton, setActiveButton] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  const [editedFolders, setEditedFolders] = useState([]);\n  // Define folder structure and toggle functionality\n  const [folders, setFolders] = useState([\n    {\n      name: \"Home Page\",\n      children: [\n        { name: \"Parse info into files\" },\n        { name: \"Format and Display Pics\" },\n      ],\n      isOpen: false,\n    },\n    {\n      name: \"Order Online\",\n      children: [\n        { name: \"Connect Doordash API\" },\n        { name: \"Read Menu to JSON\" },\n      ],\n      isOpen: false,\n    },\n    {\n      name: \"Contact Us\",\n      children: [\n        { name: \"Format Footer\" }\n      ],\n      isOpen: false,\n    },\n  ]);\n\n\n  const openai = new OpenAI({\n    apiKey: \"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\", // Make sure to keep your API key secure\n    dangerouslyAllowBrowser: true\n  });\n\n  const handleSubmit = async (e, projectIdea) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      console.log(projectIdea);\n      const sysprompt = `You are a helpful outline generator for coding projects. Given a project idea from the user, you should output the outline of the project in a TODO-list like format. Each item should FEWER THAN 6 words long. Output as a list of JSON objects like this:\n      [\n          {\n            \"name\": \"Home Page\",\n            \"children\": [\n              { \"name\": \"Parse info into files\" },\n              { \"name\": \"Format and Display Pics\" }\n            ],\n            \"isOpen\": false,\n          },\n          {\n            \"name\": \"Order Online\",\n            \"children\": [\n              { \"name\": \"Connect Doordash API\" },\n              { \"name\": \"Read Menu to JSON\" }\n            ],\n            \"isOpen\": false,\n          },\n          {\n            \"name\": \"Contact Us\",\n            \"children\": [\n              { \"name\": \"Format Footer\" }\n            ],\n            \"isOpen\": false,\n          }\n        ]\n      You should generate 3 outer-layer items (\"Home Page\", \"Order Online\", and \"Contact Us\" is the above case). For the first outer-layer item, it should have 2 subitems. For the second outer-layer item, it should have 2 subitems. For the third outer-layer item, it should have 1 subitem!!! Only 1! Generate exactly as the format given.`;\n\n      const shot1 = `[\n        {\n          \"name\": \"Home Page\",\n          \"children\": [\n            { \"name\": \"Parse info into files\" },\n            { \"name\": \"Format and Display Pics\" }\n          ],\n          \"isOpen\": false,\n        },\n        {\n          \"name\": \"Order Online\",\n          \"children\": [\n            { \"name\": \"Connect Doordash API\" },\n            { \"name\": \"Read Menu to JSON\" }\n          ],\n          \"isOpen\": false,\n        },\n        {\n          \"name\": \"Contact Us\",\n          \"children\": [\n            { \"name\": \"Format Footer\" }\n          ],\n          \"isOpen\": false,\n        }\n      ]`;\n      const shot2 = `[\n        {\n          \"name\": \"Home Page\",\n          \"children\": [\n            { \"name\": \"Design UI Layout\" },\n            { \"name\": \"Implement Authentication System\" }\n          ],\n          \"isOpen\": false\n        },\n        {\n          \"name\": \"Task Management\",\n          \"children\": [\n            { \"name\": \"Create Task CRUD Functionality\" },\n            { \"name\": \"Add Priority and Due Date\" }\n          ],\n          \"isOpen\": false\n        },\n        {\n          \"name\": \"Settings\",\n          \"children\": [\n            { \"name\": \"Allow User Preferences\" }\n          ],\n          \"isOpen\": false\n        }\n      ]`;\n      const chatCompletion = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          {\"role\": \"user\", \"content\": \"bakery website\"},\n          {\"role\": \"assistant\", \"content\": shot1},\n          {\"role\": \"user\", \"content\": \"todo list app\"},\n          {\"role\": \"assistant\", \"content\": shot2},\n          {\"role\": \"system\", \"content\": sysprompt},\n          {\"role\": \"user\", \"content\": projectIdea}\n        ],\n      });\n      console.log(chatCompletion.choices[0].message.content);\n      const jsonObject = JSON.parse(chatCompletion.choices[0].message.content);\n      console.log(jsonObject);\n      function transformFolders(folders) {\n        return folders.map(folder => ({\n          name: folder.name,\n          children: folder.children.map(child => ({\n            name: child.name\n          })),\n          isOpen: folder.isOpen\n        }));\n      }\n      const jsobject = transformFolders(jsonObject);\n      console.log(typeof jsobject)\n      // setApiResponse(jsobject);\n      setFolders(jsobject);\n      // call popup\n      handleEditOutlineClick();\n    } catch (e) {\n      console.error(e);\n      setApiResponse(\"Something is going wrong, Please try again.\");\n    }\n    setLoading(false);\n  };\n\n  const handleGenerateOutlineClick = () => {\n    setIsAIPopupOpen(true);\n  };\n\n  const handleClosePopup = () => {\n    setIsAIPopupOpen(false);\n  };\n\n\n  const handleSubmitForm = (e, projectIdea) => {\n    e.preventDefault();\n    handleSubmit(e, projectIdea);\n    handleClosePopup();\n  };\n\n  const AiPopup = ({ isOpen, onClose, onSubmit }) => {\n    const [projectIdea, setProjectIdea] = useState('');\n    \n    const handleInputChange = (e) => {\n      setProjectIdea(e.target.value);\n    };\n    if (!isOpen) return null;\n  \n    return (\n      <div className=\"popup\" style={{height: 200}} >\n        <h2>What project do you want to build?</h2>\n        <form onSubmit={(e) => handleSubmitForm(e, projectIdea)}>\n          <input\n            type=\"text\"\n            value={projectIdea}\n            onChange={handleInputChange}\n            placeholder=\"Enter your project idea\"\n            style={{ width: '95%', padding: '10px', marginBottom: '10px' }}\n          />\n          <button className=\"popup-button save\" type=\"submit\" >\n            Submit\n          </button>\n          <button onClick={onClose} className=\"popup-button save\" >Close</button>\n        </form>\n      </div>\n    );\n  };\n\n  const extractChildrenNames = (folders) => {\n    return folders.flatMap(folder => folder.children.map(child => child.name));\n  };\n\n  const subfolderList = extractChildrenNames(folders);\n\n  const toggleFolder = (folderName) => {\n    setFolders(prevFolders =>\n      prevFolders.map(folder =>\n        folder.name === folderName ? { ...folder, isOpen: !folder.isOpen } : folder\n      )\n    );\n  };\n\n  // Fetch files when the component mounts\n  useEffect(() => {\n    async function fetchFiles() {\n      try {\n        const responses = await Promise.all([\n          fetch('/example-code/apis.py'),\n          fetch('/example-code/parse.py'),\n          fetch('/example-code/format.py')\n        ]);\n        if (responses.every(response => response.ok)) {\n          const [apiText, parseText, setupText] = await Promise.all(responses.map(response => response.text()));\n          console.log(apiText);\n          const newFiles = [\n            {\n              name: \"apis.py\",\n              content: apiText,\n              linesToColor: {\n                \"\": [],\n                \"Parse info into files\": [],\n                \"Format and Display Pics\": [],\n                \"Connect Doordash API\": [15, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114],\n                \"Read Menu to JSON\": [19, 20, 21, 22, 23, 17, 18],\n                \"Format Footer\": []\n              },\n            },\n            {\n              name: \"parse.py\",\n              content: parseText,\n              linesToColor: { \"\": [],\n                \"Parse info into files\": [],\n                \"Format and Display Pics\": [],\n                \"Connect Doordash API\": [],\n                \"Read Menu to JSON\": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38],\n                \"Format Footer\": []\n              },\n            },\n            {\n              name: \"format.py\",\n              content: setupText,\n              linesToColor: { \"\": [],\n                \"Parse info into files\": [],\n                \"Format and Display Pics\": [],\n                \"Connect Doordash API\": [],\n                \"Read Menu to JSON\": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n                \"Format Footer\": []\n              },\n            }\n          ];\n          setFiles(newFiles);\n          setCurrentFile(newFiles[0]);\n        } else {\n          throw new Error('Failed to fetch one or more files');\n        }\n      } catch (error) {\n        console.error(\"Error fetching files:\", error);\n      }\n    }\n    fetchFiles();\n  }, []);\n\n  const handleContentChange = useCallback(\n    ({ name, content, linesToColor }) => {\n      if (currentFile) {\n        const updatedFiles = files.map(file => {\n          if (file.name === currentFile.name) {\n            console.log(\"Updating file:\", file.name);\n            return { ...file, content, ...(linesToColor && { linesToColor }) };\n          }\n          return file;\n        });\n        setFiles(updatedFiles);\n        setCurrentFile(prev => ({\n          ...prev,\n          content,\n          ...(linesToColor && { linesToColor })\n        }));\n      }\n    },\n    [currentFile, files]\n  );\n  \n  const handleButtonClick = (buttonName) => {\n    setActiveButton(buttonName);\n  };\n\n  const handleEditOutlineClick = () => {\n    setShowPopup(true);\n    setEditedFolders([...folders]);\n  };\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n\n  if (!currentFile) return <div>Loading files...</div>; \n\n  // Main App\n  return (\n    <div className=\"vscode-app\">\n      <main className=\"vscode-main\">\n        <section className=\"editor\">\n          <div className=\"editor-placeholder\">\n            <h1 className=\"editor-title\">\n              Outline\n              <span className=\"material-symbols-outlined help\">help</span>\n            </h1>\n            <FolderStructure\n                folders={folders}\n                onToggleFolder={toggleFolder}\n            />\n          </div>\n            {/* Folder structure component */}\n          <div className=\"edit-outline-container\">\n            {/* Popup Code */}\n            <button\n              className=\"primary-button edit-outline\"\n              onClick={handleEditOutlineClick}\n            >\n              Edit Outline\n            </button>\n              {/* New Generate New Outline Button */}\n          <button\n            className=\"primary-button edit-outline\"\n            onClick={handleGenerateOutlineClick}\n          >\n            Generate New Outline\n          </button>\n          </div>\n        </section>\n\n        <aside className=\"terminal\">\n          <div className=\"editor-window\">\n            <div className=\"file-selector\">\n              {files.map((file) => {\n                const is_highlighted =\n                  file.linesToColor[outlineID].length !== 0;\n                const is_hidden = outlineID !== \"Read Menu to JSON\" && file.name === \"format.py\";\n                const buttonStyle = is_highlighted\n                  ? { borderBottom: `8px solid ${colorToUse}` }\n                  : {};\n                const buttonClass = is_hidden\n                  ? \"filename-button-hidden\"\n                  : \"filename-button\";\n\n                return (\n                  <button\n                    style={buttonStyle}\n                    className={buttonClass}\n                    key={file.name}\n                    onClick={() => setCurrentFile(file)}\n                  >\n                    {file.name}\n                  </button>\n                );\n              })}\n            </div>\n            <Editor\n              linesToColor={currentFile.linesToColor[outlineID]}\n              colorToUse={colorToUse}\n              currentFile={currentFile}\n              onContentChange={handleContentChange}\n            />\n          </div>\n        </aside>\n      </main>\n      {showPopup && <Popup onClose={handlePopupClose} />}\n      {isAIPopupOpen && <AiPopup isOpen={isAIPopupOpen} onClose={handleClosePopup} onSubmit={handleSubmitForm} />}\n    </div>\n  );\n\n  function FolderStructure({ folders, onToggleFolder }) {\n    const [totalHeight, setTotalHeight] = useState(0);\n\n    return (\n      <div className=\"folder-structure\">\n        {folders.map((folder, index) => (\n          <FolderItem\n            key={folder.name}\n            folder={folder}\n            index={index}\n            totalHeight={totalHeight}\n            setTotalHeight={setTotalHeight}\n            onToggleFolder={onToggleFolder}\n            setOutlineID={setOutlineID} // Pass setOutlineID as a prop\n            setColorToUse={setColorToUse} // Pass setColorToUse as a prop\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function FolderItem({\n    folder,\n    index,\n    totalHeight,\n    setTotalHeight,\n    onToggleFolder,\n    setOutlineID,\n    setColorToUse,\n  }) {\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse({\n      defaultExpanded: folder.isOpen,\n    });\n\n    const folderHeight = isExpanded ? 30 + folder.children.length * 20 : 30;\n    const top = index === 0 ? 0 : totalHeight;\n\n    const handleSubfolderClick = (e, subfolderName) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (outlineID === subfolderName) {\n        setOutlineID(\"\");\n      } else {\n        setOutlineID(subfolderName)\n      }\n      console.log(subfolderName);\n      if (subfolderName === subfolderList[0]) {\n        setColorToUse(\"#32D4CC\");\n      } else if (subfolderName === subfolderList[1]) {\n        setColorToUse(\"#FFEA99\");\n      } else if (subfolderName === subfolderList[2]) {\n        setColorToUse(\"#7F83D3\");\n      } else if (subfolderName === subfolderList[3]) {\n        setColorToUse(\"#D47F9D\");\n      } else if (subfolderName === subfolderList[4]) {\n        setColorToUse(\"#7FADD3\");\n      } else {\n        setColorToUse(\"red\");\n      }\n    };\n\n    const [connections, setConnections] = useState([]);\n\n    const handleClosePopup = () => {\n      setShowPopup(false);\n    };\n    const [arrows, setArrows] = useState([]);\n    const addArrow = ({ start, end }) => {\n      setArrows([...arrows, { start, end }]);\n    };\n\n    return (\n      <div className=\"folder-item\" style={{ top }}>\n        <div\n          className=\"folder-toggle\"\n          onClick={() => onToggleFolder(folder.name)}\n          // {...getToggleProps()}\n        >\n          <span\n            className={`material-symbols-outlined ${\n              isExpanded ? \"folder-open\" : \"folder\"\n            }`}\n          >\n            chevron_right\n          </span>\n          <span className=\"folder-name\">{folder.name}</span>\n        </div>\n        {folder.children && isExpanded && (\n          <ul className=\"subfolders\" {...getCollapseProps()}>\n            {folder.children.map((subfolder) => (\n              <li key={subfolder.name} className=\"subfolder-item\">\n              <div className=\"subfolder-box\">\n              <div className=\"subfolder-text\" \n              onClick={(e) => handleSubfolderClick(e, subfolder.name)}\n              style={{\n                color: subfolder.name === outlineID ? colorToUse : 'white',\n                fontWeight: subfolder.name === outlineID ? \"bold\" : \"normal\"\n              }}>\n                {subfolder.name}\n              </div>\n              <Box\n                addArrow={addArrow}\n                handler=\"right\"\n                boxId={subfolder.name}\n              />\n              </div>\n              {arrows.map(ar => (\n              <Xarrow\n                start={ar.start}\n                end={ar.end}\n                key={ar.start + \"-.\" + ar.end}\n              />\n              ))}\n              </li>\n            ))}\n          </ul>\n        )}\n        {connections.map((conn, idx) => (\n          <Xarrow\n            key={idx}\n            start={conn.start}\n            end={conn.end}\n            startAnchor=\"auto\"\n            endAnchor=\"auto\"\n            color=\"magenta\"\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function Popup({ onClose }) {\n    const [editedFolders, setEditedFolders] = useState([...folders]);\n\n    const handleFolderNameChange = (e, folderIndex) => {\n      const newFolders = editedFolders.map((folder, index) => {\n        if (index === folderIndex) {\n          return { ...folder, name: e.target.value };\n        }\n        return folder;\n      });\n      setEditedFolders(newFolders);\n    };\n  \n    const handleSubfolderNameChange = (e, folderIndex, subfolderIndex) => {\n      const newFolders = editedFolders.map((folder, index) => {\n        if (index === folderIndex) {\n          const newChildren = folder.children.map((subfolder, subIndex) => {\n            if (subIndex === subfolderIndex) {\n              return { ...subfolder, name: e.target.value };\n            }\n            return subfolder;\n          });\n          return { ...folder, children: newChildren };\n        }\n        return folder;\n      });\n      setEditedFolders(newFolders);\n    };\n\n    const renderFolder = (folder, folderIndex) => (\n      <div key={folderIndex} className=\"popup-folder\">\n        <input\n          type=\"text\"\n          value={folder.name}\n          onChange={(e) => handleFolderNameChange(e, folderIndex)}\n        />\n        {folder.children && (\n          <ul className=\"popup-subfolders\">\n            {folder.children.map((subfolder, subfolderIndex) => (\n              <li key={subfolderIndex} className=\"popup-subfolder\">\n                <input\n                  type=\"text\"\n                  value={subfolder.name}\n                  onChange={(e) => handleSubfolderNameChange(e, folderIndex, subfolderIndex)}\n                />\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n\n    return (\n      <div className=\"popup\">\n        <div className=\"popup-header\">\n          <h2 className=\"popup-title\">Bakery Website</h2>\n          <button className=\"popup-close\" onClick={onClose}>\n            &times;\n          </button>\n        </div>\n        <div className=\"popup-content\">\n          {editedFolders.map((folder, folderIndex) => renderFolder(folder, folderIndex))}\n        </div>\n        <div className=\"popup-footer\">\n          <button className=\"popup-button cancel\" onClick={onClose}>Cancel</button>\n          <button className=\"popup-button save\" onClick={() => { onClose(); setFolders(editedFolders); }}>Save</button>\n        </div>\n      </div>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}