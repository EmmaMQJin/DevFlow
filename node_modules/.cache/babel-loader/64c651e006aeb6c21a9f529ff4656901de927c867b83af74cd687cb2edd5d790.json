{"ast":null,"code":"var _jsxFileName = \"/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js\",\n  _s = $RefreshSig$();\n// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, lineNumbers, gutter, GutterMarker, Decoration, ViewPlugin } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\n\n// Create a decoration for each special line\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createSpecialLineDecorations(specialLines) {\n  const decorations = [];\n  for (const {\n    line,\n    color\n  } of specialLines) {\n    // Create a gutter marker for each special line\n    const marker = new class extends GutterMarker {\n      toDOM() {\n        const dom = document.createElement('div');\n        dom.style.color = color;\n        return dom;\n      }\n    }();\n    // Assuming 1-indexed lines, adjust as needed\n    decorations.push(Decoration.line({\n      attributes: {\n        class: 'special-line'\n      }\n    }, {\n      line: line - 1\n    }).range(line - 1));\n  }\n  return Decoration.set(decorations, true);\n}\nconst specialLinesPlugin = specialLines => ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.decorations = createSpecialLineDecorations(specialLines);\n  }\n}, {\n  decorations: v => v.decorations\n});\nconst Editor = ({\n  value,\n  specialLines\n}) => {\n  _s();\n  const editorParentRef = useRef(null);\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [javascript(), lineNumbers(), gutter(), specialLinesPlugin(specialLines)]\n    });\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current\n    });\n    return () => {\n      view.destroy();\n    };\n  }, [value, specialLines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorParentRef,\n    style: {\n      height: '400px',\n      border: '1px solid #ddd'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(Editor, \"3VSnVeRbSyLoDWyoLSw9+RxgoHw=\");\n_c = Editor;\nexport default Editor;\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","EditorState","EditorView","lineNumbers","gutter","GutterMarker","Decoration","ViewPlugin","javascript","jsxDEV","_jsxDEV","createSpecialLineDecorations","specialLines","decorations","line","color","marker","toDOM","dom","document","createElement","style","push","attributes","class","range","set","specialLinesPlugin","fromClass","constructor","view","v","Editor","value","_s","editorParentRef","current","startState","create","doc","extensions","state","parent","destroy","ref","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmajin0210/Desktop/DevFlow/src/components/editor/editor.js"],"sourcesContent":["// Editor.js\nimport React, { useEffect, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, lineNumbers, gutter, GutterMarker, Decoration, ViewPlugin } from '@codemirror/view';\nimport { javascript } from '@codemirror/lang-javascript';\n\n// Create a decoration for each special line\nfunction createSpecialLineDecorations(specialLines) {\n  const decorations = [];\n  for (const { line, color } of specialLines) {\n    // Create a gutter marker for each special line\n    const marker = new class extends GutterMarker {\n      toDOM() {\n        const dom = document.createElement('div');\n        dom.style.color = color;\n        return dom;\n      }\n    }();\n    // Assuming 1-indexed lines, adjust as needed\n    decorations.push(Decoration.line({attributes: {class: 'special-line'}}, { line: line - 1 }).range(line - 1));\n  }\n  return Decoration.set(decorations, true);\n}\n\nconst specialLinesPlugin = (specialLines) => ViewPlugin.fromClass(class {\n  decorations;\n  constructor(view) {\n    this.decorations = createSpecialLineDecorations(specialLines);\n  }\n}, {\n  decorations: v => v.decorations\n});\n\nconst Editor = ({ value, specialLines }) => {\n  const editorParentRef = useRef(null);\n\n  useEffect(() => {\n    if (!editorParentRef.current) return;\n\n    const startState = EditorState.create({\n      doc: value,\n      extensions: [\n        javascript(),\n        lineNumbers(),\n        gutter(),\n        specialLinesPlugin(specialLines),\n      ],\n    });\n\n    const view = new EditorView({\n      state: startState,\n      parent: editorParentRef.current,\n    });\n\n    return () => {\n      view.destroy();\n    };\n  }, [value, specialLines]);\n\n  return <div ref={editorParentRef} style={{ height: '400px', border: '1px solid #ddd' }} />;\n};\n\nexport default Editor;\n\n\n\n\n\n// import React, { useEffect, useRef } from 'react';\n// import { EditorState } from '@codemirror/state';\n// import { EditorView, lineNumbers } from '@codemirror/view';\n// import { javascript } from '@codemirror/lang-javascript';\n\n// const Editor = ({ value, onChange }) => {\n//   const editorParentRef = useRef(null);\n\n//   useEffect(() => {\n//     if (!editorParentRef.current) return;\n\n//     // Line numbers styling extension\n//     const customLineNumberStyle = EditorView.baseTheme({\n//       '.cm-lineNumbers .cm-gutterElement': {\n//         color: '#f00', // Example color: red\n//         fontFamily: 'Monaco, monospace',\n//         fontSize: '0.85em',\n//       }\n//     });\n\n//     const startState = EditorState.create({\n//       doc: value,\n//       extensions: [lineNumbers(), customLineNumberStyle, javascript()],\n//     });\n\n//     const view = new EditorView({\n//       state: startState,\n//       parent: editorParentRef.current,\n//     });\n\n//     // Cleanup to avoid memory leaks\n//     return () => {\n//       view.destroy();\n//     };\n//   }, [value, onChange]);\n\n//   return <div ref={editorParentRef} style={{ border: '1px solid #ddd', height: '400px' }} />;\n// };\n\n// export default Editor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}